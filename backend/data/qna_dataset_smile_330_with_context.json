{
    "0": {
        "Context": "SMILE (Simple Machine Learning Editor) - платформа, которая позволяет пользователю использовать алгоритмы машинного обучения для моделирования технологических и бизнес-процессов. На странице руководства пользователя SMILE вы сможете найти полезную информацию о том, как работать на платформе, об основных функциях платформы и возможностях их применения. \nРаздел: как начать работу в платформе. Есть несколько способов авторизоваться: можно через стандартную форму, можно через социальные сети (Яндекс, Vkontakte, Google, Mail.ru). Авторизация через социальные сети: есть кнопка социальной сети, например Яндекс. Мы нажимаем на Яндекс. После этого мы попадаем на платформу и здесь уже можно работать. Можно зайти в личный кабинет посмотреть, что у нас есть всё хорошо: почта, имя, фамилия. Рассмотрим другой вариант: авторизация через стандартную форму регистрации. Для начала необходимо ввести email. Теперь нужно придумать пароль. Нажимаем продолжить. А дальше нужно ввести имя пользователя, фамилию, имя, отчество, название организации, роль в организации. В принципе это необязательные поля, можно поставить какие-нибудь знаки пропуска или тире и всё будет хорошо. А теперь нажимаем зарегистрироваться и получаем сообщение, что необходимо подтвердить почту. Переходим на почту, пришло новое письмо, что необходимо пройти по ссылке, чтобы подтвердить регистрацию, переходим по ссылке - почта подтверждена. Теперь мы можем ввести снова эти данные, логин, пароль, и войти в платформу.\nРаздел: Регистрация и авторизация пользователя. Доступом к платформе обладают пользователи, прошедшие регистрацию. Основным способом авторизации является вход через указанный при регистрации адрес электронной почты и сформированный пароль. После регистрации и авторизации пользователь получает доступ к платформе SMILE и может приступить к работе. В личном кабинете пользователя SMILE доступны настройки профиля, в частности изменение личных данных и пароля. Для использования платформы SMILE можно также использовать ключ API, который применяется пользователем в собственной информационной системе.\nРаздел: Настройки команды. Работа в платформе SMILE может осуществляться в командах. Каждый пользователь может создавать собственную команду либо быть участником одной из команд. В личном кабинете пользователь может видеть в каких командах он состоит, получить информацию о каждой из них, а также создать собственную команду. При создании собственной команды пользователь становится ее руководителем и может приглашать участников. В процессе приглашения участников пользователь указывает электронный адрес пользователя и права, которые предоставляет ему, в рамках работы в команде. У пользователя могут быть следующие права в рамках работы в команде: Редактор - пользователь, который может изменять данные, модели и параметры в проектах и модулях; Читатель - пользователь, который может только просматривать проекты и модули, без возможности редактирования.",
        "questions_list": [
            "Каковы основные способы авторизации на платформе SMILE?",
            "Какие социальные сети поддерживаются для авторизации на платформе SMILE?",
            "Какие действия необходимо выполнить для авторизации через социальную сеть Яндекс?",
            "Какие поля обязательны для заполнения при регистрации через стандартную форму?",
            "Какие действия нужно выполнить после регистрации через стандартную форму, чтобы подтвердить почту?",
            "Какие данные необходимо ввести для авторизации после подтверждения почты?",
            "Какие возможности предоставляет личный кабинет пользователя на платформе SMILE?",
            "Что можно настроить в личном кабинете пользователя SMILE?",
            "Какой дополнительный способ авторизации, кроме логина и пароля, доступен на платформе SMILE?",
            "Какой основной способ авторизации используется на платформе SMILE?",
            "Какие возможности открываются пользователю после регистрации и авторизации на платформе SMILE?",
            "Какие права может иметь пользователь в команде на платформе SMILE?",
            "Как можно пригласить участников в команду на платформе SMILE?",
            "Какие действия доступны руководителю команды на платформе SMILE?",
            "Как можно создать собственную команду на платформе SMILE?",
            "Какие права могут быть предоставлены пользователю в рамках работы в команде на платформе SMILE?",
            "Какую информацию можно получить о командах в личном кабинете пользователя на платформе SMILE?",
            "Какие роли могут быть у пользователя в команде на платформе SMILE?",
            "Что может делать пользователь с правами редактора в команде на платформе SMILE?",
            "Что может делать пользователь с правами читателя в команде на платформе SMILE?"
        ],
		"answers_list": [
            "Возможности авторизации на платформе SMILE включают стандартную форму и вход через социальные сети, такие как Яндекс, Google, Mail.ru и VKontakte.",
            "Возможности авторизации через социальные сети включают Яндекс, Google, Mail.ru и ВКонтакте.",
            "Для авторизации через социальную сеть Яндекс необходимо нажать на кнопку Яндекс, которая находится на странице входа в SMILE. После этого вы попадете на платформу и сможете начать работу.",
            "В процессе регистрации через стандартную форму необходимо ввести email и придумать пароль.",
            "Пользователю необходимо перейти по ссылке, указанной в письме, которое было отправлено на адрес электронной почты, указанный при регистрации.",
            "Ввести email и пароль.",
            "Личный кабинет пользователя на платформе SMILE позволяет изменять личные данные и пароль, создавать команды и приглашать участников, а также управлять правами участников в рамках работы в команде.",
            "В личном кабинете пользователя SMILE можно настроить следующие параметры: изменить личные данные, изменить пароль.",
            "На платформе SMILE доступен дополнительный способ авторизации через ключ API.",
            "Вход через указанный при регистрации адрес электронной почты и сформированный пароль.",
            "Пользователю после регистрации и авторизации на платформе SMILE открываются возможности работы с алгоритмами машинного обучения для моделирования технологических и бизнес-процессов.",
            "Пользователь в команде на платформе SMILE может иметь следующие права: редактор и читатель.",
            "В личном кабинете пользователя SMILE можно создать собственную команду и пригласить участников. При приглашении участников пользователь указывает электронный адрес пользователя и права, которые предоставляет ему, в рамках работы в команде.",
            "В SMILE руководитель команды может создавать проекты, добавлять и удалять участников команды, а также управлять правами доступа к проектам.",
            "В личном кабинете пользователя SMILE можно создать собственную команду.",
            "В рамках работы в команде на платформе SMILE пользователю могут быть предоставлены следующие права: Редактор - пользователь, который может изменять данные, модели и параметры в проектах и модулях; Читатель - пользователь, который может только просматривать проекты и модули, без возможности редактирования.",
            "В личном кабинете пользователя на платформе SMILE можно получить информацию о командах, в которых состоит пользователь, создать собственную команду, пригласить участников и определить их права в рамках работы в команде.",
            "В рамках работы в команде на платформе SMILE могут быть следующие роли: Редактор и Читатель.",
            "Пользователь с правами редактора в команде на платформе SMILE может изменять данные, модели и параметры в проектах и модулях.",
            "Пользователь с правами читателя в команде на платформе SMILE может только просматривать проекты и модули, без возможности редактирования."
        ]
    },
    "1": {
        "Context": "Раздел: базовые разделы в платформе.  Главная страница платформы SMILE отображает все проекты, к которым пользователь имеет доступ. Пользователь может открыть любой из доступных ему проектов для дальнейшей работы.  На основной и главной странице SMILE указаны проекты и модули. Для удобства навигации по Проектам на платформе доступны следующие функции: \nФильтр по тегам - используется для отображения Проектов, к которым применен указанный тег;\nПоиск по названию - позволяет найти Проект или Проект содержащий Модуль с введенным названием;\nФильтр по автору - позволяет отображать проекты, в которых автором является или не является пользователь;\nСортировка проектов - позволяет настраивать параметры и направления сортировки. Если заходит новый пользователь, у него нет своих проектов и модулей, но тем не менее сверху вы можете увидеть, что уже какие-то публичные проекты и какие-то графы доступны. Доступные графы вверху — это те графы, которые выложены в публичный доступ, их можно посмотреть, их можно скопировать к себе и после этого с ними можно работать. А редактировать их напрямую нельзя. Также есть вкладка Данные, здесь у нового пользователя также ничего сначала нет. Как только загружаете данные, на вкладке Данные будет отображаться их список. Страница Загрузки вычислительных ресурсов: здесь показаны вычислительные ресурсы, то есть информация о том, на каких ресурсах считаются модели. Есть приоритет, но обычно по умолчанию ресурсы имеют следующий приоритет: 1. Local, 2. DataMall, 3. UbuntuServer. Если что-то выделено красным, значит этот ресурс  не доступен. Также есть история загрузки ресурсов. Статистика общая по моделям, кто что использует. Отдельно страница с Моделями. Здесь выведены все модели, которые есть в платформе, и можно ознакомиться детально с каждой из них, почитать описание, посмотреть ссылку на источник, посмотреть, какие визуализаторы к ней подходят. Последний пункт – это Руководство пользователя, вы можете также в него перейти, тут есть несколько разделов как, начинать работу, как работать с графом и прочее. \nРаздел: проекты и модули. При работе на платформе SMILE следует учитывать наличие двух основных сущностей: Проект - пользовательский набор отдельных модулей, объединенных одной тематикой или направленных на решение одной проблемы; Модуль - рабочее пространство пользователя платформы SMILE, в котором происходит работа с признаками и моделями. Если мы создаём проект в начале, необходимо ввести его название. Можно ввести описание и теги, чтобы проще было искать, когда проектов много. Нажимаем создать, создаётся новый проект. Дальше можем создать модуль в рамках проекта.  Опять-таки можно ввести описание модуля и теги по образцу.  Теперь у нас есть один проект, в рамках которого есть один модуль. Обычно мы это используем так, что проект — это какая-то задача, а разные модули – это проверка гипотез в рамках задачи. \nСоздание Проекта и Модуля. На странице Мои проекты пользователь может создать Проект или Модуль. Важно: создание Модуля автоматически требует выбора Проекта, к которому прикрепляется данный Модуль или создания нового Проекта. При создании Проекта автоматическое вложение Модуля не требуется.\nПри нажатии кнопки \"Создать\" на главной страницы платформы SMILE, пользователь может выбрать \"Проект\" или \"Модуль\" из выпадающего меню.\nПри создании Проекта и Модуля необходимо будет заполнить следующие поля: 1. Выбор типа Проекта; 2. Название - обязательное поле при создании и Проекта и Модуля; 3. Описание - поле, в котором описывается назначение Проекта, рекомендуется к заполнению, но не является обязательным; 4. Теги - поле для присвоения тегов проекту, для дальнейшей фильтрации; 5. Управление доступом - приглашение участников к работе над проектом.\nПроекты бывают двух типов: Личный - доступен только пользователю и приглашенным участникам; Командный - доступен пользователю, членам выбранной команды и приглашенным участникам.\nОписание Проекта будет также отображаться во всех внутренних Модулях Проекта.\nУчастник Проекта или Модуля может иметь два уровня доступа: Читатель - может только просматривать Проект и Модуль и запускать узлы; Редактор - может создавать Модули в Проекте, работать в редакторе. Модуль может наследовать настройки доступа от родительского Проекта.\nСоздание Проекта может осуществляться с нуля, либо пользователь может выбрать Проект из Шаблонов или Маркетплейса проектов.",
        "questions_list": [
            "Что отображается на главной странице платформы SMILE?",
            "Как пользователь может открыть доступный ему проект на платформе SMILE?",
            "Какие функции доступны для навигации по проектам на платформе SMILE?",
            "Как работает фильтр по тегам на платформе SMILE?",
            "Как можно найти проект по названию на платформе SMILE?",
            "Какой функционал предоставляет фильтр по автору на платформе SMILE?",
            "Как можно настроить параметры и направления сортировки проектов на платформе SMILE?",
            "Какие проекты и модули доступны новому пользователю на платформе SMILE?",
            "Что такое публичные проекты и графы на платформе SMILE?",
            "Какие действия можно выполнять с публичными графами на платформе SMILE?",
            "Что отображается на вкладке Данные для нового пользователя на платформе SMILE?",
            "Как отображаются загруженные данные на вкладке Данные?",
            "Что показывает страница Загрузки вычислительных ресурсов на платформе SMILE?",
            "Какие приоритеты вычислительных ресурсов указаны по умолчанию на платформе SMILE?",
            "Что означает красное выделение вычислительных ресурсов на платформе SMILE?",
            "Где можно найти историю загрузки ресурсов на платформе SMILE?",
            "Какая информация доступна на странице Модели платформы SMILE?",
            "Какие данные можно узнать о моделях на странице Модели платформы SMILE?",
            "Что содержит раздел Руководство пользователя на платформе SMILE?",
            "Какие основные сущности существуют при работе на платформе SMILE?",
            "Что такое Проект на платформе SMILE?",
            "Что такое Модуль на платформе SMILE?",
            "Какие шаги нужно выполнить для создания нового проекта на платформе SMILE?",
            "Какие поля рекомендуется заполнять при создании проекта на платформе SMILE?",
            "Как создаётся модуль в рамках проекта на платформе SMILE?",
            "Для чего используются теги при создании проекта или модуля на платформе SMILE?",
            "Где можно создать Проект или Модуль на платформе SMILE?",
            "Какие поля необходимо заполнить при создании Проекта и Модуля на платформе SMILE?",
            "Какие типы проектов бывают на платформе SMILE?",
            "Какие уровни доступа могут иметь участники Проекта или Модуля на платформе SMILE?"
        ],
        "answers_list": [
            "На главной странице платформы SMILE отображаются все проекты, к которым пользователь имеет доступ.",
            "Пользователь может открыть доступный ему проект на платформе SMILE, нажав на его название на главной странице.",
            "На платформе SMILE доступны следующие функции для навигации по проектам: фильтр по тегам, поиск по названию, фильтр по автору и сортировка проектов.",
            "Фильтр по тегам на платформе SMILE позволяет отображать проекты, к которым применен указанный тег.",
            "На платформе SMILE можно найти проект по названию с помощью поисковой строки, которая находится в верхней части страницы.",
            "Фильтр по автору на платформе SMILE позволяет отображать проекты, которые были созданы указанным автором.",
            "На платформе SMILE можно настроить параметры и направления сортировки проектов с помощью инструментов сортировки: можно выбрать сортировку по названию, дате создания или обновления, а также настроить направление сортировки.",
            "Новому пользователю доступны публичные проекты, которые были созданы другими пользователями и открыты для общего пользования. Эти проекты новый пользователь может просматривать или скопировать себе для редактирования, но непосредственно редактировать сами публичные проекты нельзя.",
            "Публичные проекты и графы на платформе SMILE - это проекты и графы, которые выложены в публичный доступ и доступны для просмотра и копирования любым пользователем платформы.",
            "С публичными графами на платформе SMILE можно выполнять следующие действия: просмотр, копирование и скачивание.",
            "Вкладка \"Данные\" для нового пользователя на платформе SMILE не содержит данных, поскольку пользователь не загрузил данные еще.",
            "На вкладке Данные загруженные данные отображаются в виде списка с указанием названия загруженного файла, даты его загрузки, в также перечня модулей, в которых данные используются.",
            "Страница Загрузки вычислительных ресурсов на платформе SMILE показывает информацию о вычислительных ресурсах, на которых считаются модели, приоритет этих ресурсов и историю загрузки ресурсов.",
            "На платформе SMILE по умолчанию вычислительные ресурсы имеют следующие приоритеты: Local, DataMall, UbuntuServer.",
            "Согласно документации, красное выделение означает, что вычислительные ресурсы недоступны.",
            "На странице \"Загрузки вычислительных ресурсов\"",
            "На странице Модели платформы SMILE доступна информация о всех моделях, которые есть в платформе, включая описание, ссылку на источник и информацию о подходящих визуализаторах.",
            "На странице Модели платформы SMILE можно узнать о моделях: их описание, источник, подходящие визуализаторы и т.д.",
            "В разделе Руководство пользователя на платформе SMILE содержатся инструкции по работе с платформой, включая информацию о создании проектов, модулей и работе с графами.",
            "В работе на платформе SMILE существуют две основные сущности: проект и модуль.",
            "В платформе SMILE проект - это набор модулей, объединенных одной тематикой или направленных на решение одной проблемы.",
            "Модуль - рабочее пространство пользователя платформы SMILE, в котором происходит работа с признаками и моделями.",
            "Вам нужно выбрать \"Проект\" из выпадающего меню, после чего заполнить поля: название, описание, теги и выбрать тип проекта.",
            "Рекомендуется заполнить следующие поля: название, описание, теги и управление доступом.",
            "Модуль в платформе SMILE создается в рамках проекта. Для модуля можно указать описание и перечень тегов.",
            "Теги используются для удобства фильтрации проектов по тематике или направлению.",
            "На главной странице платформы SMILE.",
            "1. Выбор типа Проекта; 2. Название - обязательное поле при создании и Проекта и Модуля; 3. Описание - поле, в котором описывается назначение Проекта, рекомендуется к заполнению, но не является обязательным; 4. Теги - поле для присвоения тегов проекту, для дальнейшей фильтрации; 5. Управление доступом - приглашение участников к работе над проектом.",
            "На платформе SMILE существуют два типа проектов: Личный и Командный.",
            "Участники Проекта или Модуля на платформе SMILE могут иметь два уровня доступа: Читатель и Редактор."
        ]
    },
    "2": {
        "Context": "Раздел: рабочее пространство платформы SMILE. Рабочее пространство пользователя платформы SMILE представляет собой открытый Модуль любого из Проектов.\nРабочее пространство предназначено для работы с данными и моделями машинного обучения в формате графа. Граф на платформе SMILE состоит из Узлов и Ребер, соединяющих их.\nУзлы графа могут представлять собой Признаки и Модели. Признаки - данные, используемые в Модуле, как загруженные пользователем самостоятельно, так и рассчитанные в рамках применения различных моделей. Модели - программные алгоритмы для работы с Признаками (данными) и другими Моделями, реализованные в качестве Узла графа на платформе SMILE.\nРебра в рабочем пространстве необходимы для соединения между собой Узлов, в частности для передачи данных, применения Моделей. Ребра являются направленными, что необходимо учитывать при соединении Узлов на графе. Направление Ребра формируется в момент выбора очередности соединения двух Узлов.\nвкладки рабочего пространства: рабочее пространство пользователя платформы SMILE состоит из нескольких основных вкладок: 1. Данные; 2. Редактор; 3. Анализ данных; 4. Вычисления; 5. Описание. Вкладка Данные - вкладка для работы с данными, в рамках конкретного Модуля. Вкладка Редактор - построение и работа с графом, который состоит из Признаков и Моделей. Редактор позволяет добавлять данные, обрабатывать их и применять к ним различные модели машинного обучения. Вкладка Анализ данных - вкладка для детального анализа данных, которые используются в модуле и/или загружены на платформу SMILE. Вкладка Анализ данных позволяет просматривать данные в формате таблицы и нескольких видов графиков. Вкладка Вычисления - вкладка для расчетов узлов графа, которая позволяет проводить несколько вычислений одновременно, просматривать их результаты и изменять параметры моделей. Вкладка Описание - пользовательская информация о Модуле, которая размещена на платформе SMILE. В частности здесь может быть документация о Проекте, возможные способы переиспользования Модуля и другое.",
        "questions_list": [
            "Что представляет собой рабочее пространство пользователя платформы SMILE?",
            "Из каких основных элементов состоит граф на платформе SMILE?",
            "Что представляют собой Узлы графа на платформе SMILE?",
            "Какие данные могут быть Признаками в Модуле на платформе SMILE?",
            "Какую роль выполняют Модели в графе на платформе SMILE?",
            "Какова функция Ребер в рабочем пространстве платформы SMILE?",
            "Почему направление Ребра важно при соединении Узлов на графе SMILE?",
            "Какие основные вкладки имеются в рабочем пространстве пользователя на платформе SMILE?",
            "Для чего предназначена вкладка Данные в рабочем пространстве SMILE?",
            "Какие действия можно выполнять на вкладке Редактор в рабочем пространстве SMILE?",
            "Что позволяет делать вкладка Анализ данных на платформе SMILE?",
            "Какие форматы отображения данных доступны на вкладке Анализ данных на платформе SMILE?",
            "Какую функцию выполняет вкладка Вычисления в рабочем пространстве SMILE?",
            "Какие возможности предоставляет вкладка Вычисления на платформе SMILE?",
            "Для чего используется вкладка Описание в рабочем пространстве SMILE?",
            "Какая информация может быть размещена на вкладке Описание на платформе SMILE?",
            "Как можно добавлять и обрабатывать данные в редакторе графа на платформе SMILE?",
            "Какие виды графиков можно использовать на вкладке Анализ данных на платформе SMILE?",
            "Какие параметры моделей можно изменять на вкладке Вычисления в рабочем пространстве SMILE?",
            "Как просматривать результаты вычислений на платформе SMILE?"
        ],
        "answers_list": [
            "Рабочее пространство пользователя платформы SMILE представляет собой открытый Модуль любого из Проектов.",
            "Граф на платформе SMILE состоит из узлов и ребер.",
            "Узлы графа на платформе SMILE могут представлять собой Признаки и Модели.",
            "Признаки в Модуле на платформе SMILE могут быть любыми данными, которые используются в процессе обучения и применения моделей машинного обучения, как загруженные пользователем самостоятельно, так и рассчитанные в рамках применения различных моделей.",
            "Модели выполняют роль программных алгоритмов для работы с Признаками (данными) и другими Моделями, реализованные в качестве Узла графа на платформе SMILE.",
            "Ребра в рабочем пространстве платформы SMILE необходимы для соединения между собой Узлов, в частности для передачи данных, применения Моделей.",
            "Направление ребра важно при соединении узлов на графе SMILE, потому что оно определяет направленность потока данных между узлами. Это позволяет обеспечить корректную работу моделей машинного обучения, которые используют данные из других моделей или признаков.",
            "В рабочем пространстве пользователя на платформе SMILE имеются следующие основные вкладки: Данные, Редактор, Анализ данных, Вычисления, Описание.",
            "Вкладка \"Данные\" предназначена для работы с данными в рамках конкретного модуля.",
            "В рабочем пространстве SMILE на вкладке Редактор можно выполнять следующие действия: \n- добавлять данные;\n- обрабатывать данные;\n- применять к ним различные модели машинного обучения.",
            "Вкладка Анализ данных на платформе SMILE позволяет детально анализировать данные, которые используются в модуле и/или загружены на платформу SMILE.",
            "На вкладке Анализ данных на платформе SMILE доступны следующие форматы отображения данных: таблица и несколько видов графиков.",
            "Вкладка \"Вычисления\" в рабочем пространстве SMILE позволяет проводить несколько вычислений одновременно, просматривать их результаты и изменять параметры моделей.",
            "Вкладка \"Вычисления\" на платформе SMILE позволяет проводить несколько вычислений одновременно, просматривать их результаты и изменять параметры моделей.",
            "Вкладка Описание в рабочем пространстве SMILE предназначена для хранения пользовательской информации о проекте, включая документацию, возможные способы повторного использования модуля и т. д.",
            "На вкладке Описание на платформе SMILE может быть размещена пользовательская информация о Модуле, включая документацию о Проекте, возможные способы переиспользования Модуля и другую информацию.",
            "В редакторе графа на платформе SMILE можно добавлять и обрабатывать данные, используя различные инструменты и функции. Например, вы можете загрузить данные из файла, создать новые признаки на основе существующих, выполнить анализ данных, выбрать наиболее значимые признаки и т.д.",
            "На вкладке \"Анализ данных\" платформы SMILE можно использовать различные виды графиков, такие как линейный, столбчатый, диаграмма рассеяния, круговая диаграмма и другие.",
            "На вкладке Вычисления в рабочем пространстве SMILE можно изменять параметры моделей, которые используются в проекте. Это позволяет настроить модель под конкретные задачи и получить более точные результаты.",
            "На платформе SMILE вы можете просмотреть результаты вычислений на вкладке \"Вычисления\". Здесь вы можете просмотреть результаты нескольких вычислений одновременно, а также изменить параметры моделей."
        ]
    },
    "3": {
        "Context": "Раздел: вычислительный граф. Все процессы в нашей платформе задаются с помощью ориентированного графа, где есть 2 типа узлов и ребер. Узлы данных ответственны за фильтрацию признаков и отображение таблиц или картинок. Узлы моделей содержат в себе модели, и, как правило, принимают на вход данные, и отдают на выход новые (преобразованные) данные. Обычные ребра, в которых также можно фильтровать признаки, показывают направление передачи данных. Apply ребра (пунктирные) предназначены для применения обученной модели к новым данным. \nЗдесь я расскажу о концепции, нашем подходе к работе с графом SMILE, с нашим двудольным ориентированном графом. И я детально расскажу, что есть что, как с ним работать, что значат конкретные цвета, формы, надписи и прочее. Итак, что здесь собрано: здесь собрана простая классификация с оценкой тестовой выборки. Что мы здесь видим: есть синенькие узлы, есть зелёненькие узлы. Синенькие узлы - это узлы данных, в рамках этих узлов вы можете отфильтровать признаки, которые вам нужны. То есть то, что здесь отмечено галочками, то пойдёт дальше в следующее узлы по ориентированному ребру. Что не выбрано, отсеется на этом этапе. Есть данные, то есть вы можете работать непосредственно с данными в рамках этого узла. Что значит работать, это значит анализировать: анализировать общую статистику по данным, анализировать конкретные значения, если вам необходимо, то строить графики по этим данным, скачать данные. То есть вся работа с данными в рамках одного узла. Как только мы на него нажали, визуализировались данные. При этом узел данных стал тёмно-синим. Что это значит? Это значит, что сам узел был запущен, то есть в начале платформа не работает данными, она работает с метаданными этих данных. Это сделано, чтобы скорость работы была оптимальна, то есть это сделано для ускорения. А как только вы нажимаете кнопочку Данные здесь, либо кнопку Рассчитать в рамках узла модели, платформа начинает запуск. Для узла модели это более долгие операции и вам придется подождать, пока это эти действия происходят. Чем больше данные, тем больше времени необходимо ждать. Узел, который был запущен, выделен более тёмным цветом. От узла идёт ориентированное ребро, как я сказал выше. Вы можете нажать на это ребро и в рамках ребра отфильтровать признаки. То есть TrainAndTest у нас модель, зелёная, она даёт трейн данные и тест данные, и вы можете отфильтровать данные как в ребре выходящем, так и в узле дочернем. То есть неважно, где вам удобно делать. Мне привычно, наверное, в ребре. Обычно я через ребро фильтрую, чтобы было понятно, что, куда и сколько идёт.  Узел модели. Это Зелёная сущность, зелёный цвет. В узле модели основное — это параметры модели. Тут есть много всяких разных параметров, они меняются от узла к узлу, от модели к модели. Для TrainAndTest, например, у нас есть целевой столбец это select, из которого можно выбрать конкретный столбец, который идёт на вход, то есть здесь только те столбцы, которые идут на вход. Если мы отфильтруем какой-то признак, то здесь его не будет. Дальше размер тестовой и тренировочный выборок (test_size и train_size), random_state, если он вам необходим и перемешать или не перемешать (shuffle). Вы можете изменять их, можете не изменять, по умолчанию должно всё работать. Если мы запускаем узел, то вы видели, что происходит, появляется большая кнопочка остановить, появляются логи, которые идут и вот узел почитан, достаточно быстро, потому что датасет маленький, модель тоже простая. Как только модель была посчитана, она становится тёмно-зелёной. Это отличает рассчитанную модель от нерассчитанной.  Важно ещё сказать, что для рассчитанной модели появляется отдельное окошко. Давайте мы посмотрим, как это выглядит. Оно есть не для всех узлов, оно есть для тех узлов, где необходимо увидеть результат. Например, нам нужно увидеть результат для логистической регрессии. В данном случае мы просто классифицируем ирисы. Пошла загрузка, здесь вот уже занимает какое-то время, потому что данные считаются на удалённом сервере. Нужно ещё передать данные, посчитать, сохранить результаты и тд и тп.  Идёт loader, меняются логи. Модель посчитана, она также применилась к дочернему узлу. Чтобы модель применилась, нужен особый тип ребра. Это называется Apply ребро. Сейчас граф показывает, что мы обучили вот эту модель на данных, которые пришли от TrainAndTest и применили эту модель к новому узлу данных, вот к этим данным. И сама модель сгенерировала ещё к этому узлу вот эти данные: это предикт и проба. Мы можем несколько раз применить эту модель. То есть если мы создаём ещё один узел данных, то, в принципе, уже мы можем это сделать. То есть если названия столбцов совпадают, а они совпадают, мы также можем спокойно сколько угодно раз переиспользовать применять к любому вида узлам. Ну и получать на выходе конкретные предикты и пробы. Ещё раз вернёмся к узлу модели. Здесь также есть параметры, которые можно менять. И что более важно, для рассчитанных узлов есть какие-то результаты. Вот для логистической регрессии это таблица с оценками, с метриками качества, которые были подсчитаны на тренировочных данных, на тех данных, на которых модель обучалась, чтобы посмотреть, насколько хорошо обучила модель. Тестовых данных здесь не было при обучении, тестовые данные есть здесь. Чтобы оценить тестовые данные, у нас есть различные scorers, Classification Scorers, Regression Scorers и тд. Мы можем также запустить этот scorer, он посчитается и выведет нам таблицу с метриками качества для тестовых данных. Их может быть несколько, столько же, сколько и узлов с тестовыми данными. Важный момент: если мы изменяем какой-то параметр, то узел сбрасывается. Если узел сбрасывается, то таблица пропадает. Чтобы посмотреть снова таблицу, нам нужно пересчитать модель. А после того, как модель пересчитается, мы увидим новую таблицу с результатами, с метриками качества на тренировочных данных. И снова новая модель, уже новая обученная модель применится к тестовым данным и сгенерирует новые предикт и проба, которые можно будет посмотреть. И вот здесь можно посмотреть, что предикт и проба действительно есть, а если есть предикт и проба, то он нам говорит, что проблема размерности потому что проба – это массив с несколькими измерениями. И вот здесь у нас говорит выберите датафрейм для отображения. У нас есть несколько дата фреймов: есть обычный датафрейм, где все данные предикт, и есть проба. Мы выбираем обычный dataframe и смотрим, что действительно есть признаки, он добавил новый признак в виде предикт и мы можем посмотреть, найти соответствие, либо посмотреть на вероятности для трёх классов. Если мы изменим в самом начале графа, в самом родительском элементе какой-то признак, то весь граф сбрасывается и нужно будет его пересчитать. Чтобы пересчитать, мы можем запускать узлы поочерёдно, контролируя каждое действие, либо мы можем запустить последний узел модели, и он по стеку все родительские элементы по очереди запустит. Что ещё здесь можно: в рамках графа можно перезагрузить Граф. Это значит, что сбрасывается кэш, если мы нажимаем, все узлы стали снова светлыми. Я вот показал, что можно запустить самый-самый дочерний элемент последний, конечный, конечный. А можно запустить в принципе весь Граф. Есть такая кнопочка запустить Граф. Если мы её нажимаем, происходит то же самое, каждый узел по очереди запускается и мы можем увидеть результат. ",
        "questions_list": [
            "Что такое вычислительный граф на платформе SMILE?",
            "Какие два типа узлов существуют в вычислительном графе SMILE?",
            "Какую функцию выполняют узлы данных в вычислительном графе SMILE?",
            "Что происходит при нажатии на узел данных в графе SMILE?",
            "Какую функцию выполняют узлы моделей в вычислительном графе SMILE?",
            "Что такое обычные ребра в вычислительном графе SMILE и для чего они используются?",
            "Какую роль выполняют Apply ребра в вычислительном графе SMILE?",
            "Какого цвета узлы данных в графе SMILE?",
            "Какого цвета узлы моделей в графе SMILE?",
            "Как визуализируются данные при нажатии на узел данных в графе SMILE?",
            "Как платформа SMILE оптимизирует скорость работы с данными?",
            "Как пользователь может анализировать данные в узле данных на платформе SMILE?",
            "Что происходит, когда узел данных или узел модели запускается в графе SMILE?",
            "Как можно отфильтровать признаки в узле данных на платформе SMILE?",
            "Как происходит фильтрация признаков в обычном ребре на платформе SMILE?",
            "Какие параметры модели можно изменить в узле модели на платформе SMILE?",
            "Что означает, если узел модели выделен темно-зеленым цветом?",
            "Что происходит после завершения расчета узла модели на платформе SMILE?",
            "Как применить обученную модель к новым данным с помощью Apply ребра?",
            "Какова функция целевого столбца в узле модели на платформе SMILE?",
            "Каковы параметры размера тестовой и тренировочной выборок (test_size и train_size) в узле модели?",
            "Как можно изменить параметры узла модели на платформе SMILE?",
            "Что происходит, если изменить параметр в узле модели после его запуска?",
            "Какие результаты отображаются для рассчитанной модели на платформе SMILE?",
            "Как просматривать результаты предсказаний (predict) и вероятностей (prob) для рассчитанной модели?",
            "Что делать, если необходимо пересчитать модель после изменения параметров?",
            "Как запускать узлы графа поочередно или весь граф целиком на платформе SMILE?",
            "Что значит перезагрузить граф и как это сделать на платформе SMILE?",
            "Какие данные могут быть отображены в различных датафреймах (dataframe) на платформе SMILE?",
            "Как работает функция запуска самого последнего узла модели для пересчета всех родительских элементов на платформе SMILE?"
        ],
        "answers_list": [
            "Вычислительный граф на платформе SMILE - это ориентированный граф, на котором представлены данные, модели и процессы, используемые для анализа и обработки данных.",
            "В вычислительном графе SMILE существуют два типа узлов: узлы данных и узлы моделей.",
            "В узлах данных выполняется фильтрация признаков и отображение таблиц или графиков.",
            "В узле данных вы можете отфильтровать признаки, которые вам нужны, а также работать непосредственно с данными, например, анализировать их статистику или строить графики. При нажатии на узел данных в графе SMILE платформа начинает работать с данными, что может потребовать некоторого времени, в зависимости от объема данных.",
            "В узлах моделей хранятся модели, которые принимают на вход данные и возвращают новые (преобразованные) данные.",
            "Ориентированные ребра в вычислительном графе SMILE используются для передачи данных между узлами. Они могут использоваться для фильтрации признаков и для показа таблиц или картинок.",
            "В вычислительном графе SMILE Apply ребра используются для применения обученной модели к новым данным. Они указывают на то, что модель должна быть применена к данным, которые находятся на другом конце ребра.",
            "Синего цвета.",
            "В графе SMILE узлы моделей имеют зелёный цвет.",
            "Да, при нажатии на узел данных в графе SMILE, данные визуализируются в виде таблицы или графика, в зависимости от типа данных и выбранных параметров.",
            "Платформа SMILE оптимизирует скорость работы с данными, запуская узлы данных только при необходимости, а не сразу при загрузке графа. Это позволяет ускорить время выполнения задач и улучшить производительность.",
            "Пользователь может анализировать данные в узле данных на платформе SMILE, используя различные инструменты, такие как анализ общей статистики, анализ конкретных значений, построение графиков и скачивание данных.",
            "В узле данных происходит фильтрация признаков и отображение таблиц или графиков. В узле модели происходит применение обученной модели к новым данным.",
            "В узле данных на платформе SMILE можно отфильтровать признаки, нажав на соответствующую кнопку в правом верхнем углу узла. Это позволит выбрать необходимые признаки для дальнейшего анализа и обработки данных.",
            "Фильтрация признаков в обычном ребре на платформе SMILE происходит путем выбора необходимых признаков и отсеивания ненужных. Это позволяет сократить размер входных данных и ускорить работу модели.",
            "В узле модели на платформе SMILE можно изменить такие параметры модели, как целевой столбец, размер тестовой и тренировочной выборок, параметры перемешивания и т. д.",
            "Если узел модели выделен темно-зеленым цветом, то это означает, что модель была рассчитана и применена к новым данным.",
            "В результате расчета узла модели на платформе SMILE появляется возможность применения модели к новым данным. Для этого используется специальный тип ребра - Apply ребро.",
            "С помощью Apply ребра можно применить обученную модель к новым данным.",
            "Целевой столбец в узле модели на платформе SMILE определяет столбец, содержащий target значения, то есть значения, для которых решаются задачи классификации или регрессии.",
            "В узле модели параметры размера тестовой и тренировочной выборок (test_size и train_size) позволяют определить относительный размер этих выборок в процентах от общего количества данных.",
            "В рамках узла модели можно изменить различные параметры, такие как целевой столбец, размер выборок, random_state и т.д. Эти параметры можно изменить в соответствующих полях на странице узла модели.",
            "Если изменить параметр в узле модели после его запуска, то узел сбрасывается и необходимо пересчитать модель, чтобы увидеть новые результаты.",
            "В рамках рассчитанной модели на платформе SMILE отображаются результаты в виде таблицы с оценками и метриками качества на тренировочных данных. Также доступны предикт и проба, которые можно посмотреть, выбрав соответствующий датафрейм.",
            "В рамках узла модели можно выбрать один из двух вариантов отображения результатов: \"Предикт\" или \"Проба\". При выборе \"Предикт\" отображается обычный датафрейм с добавленным столбцом \"Предикт\", который содержит предсказанные значения для каждого объекта. При выборе \"Проба\" отображается датафрейм с несколькими столбцами, каждый из которых представляет вероятность принадлежности объекта к определенной группе.",
            "Если необходимо пересчитать модель после изменения параметров, необходимо нажать на кнопку \"Рассчитать\" в рамках узла модели. Это приведет к перерасчёту модели с учётом изменений в параметрах.",
            "В SMILE можно запускать узлы графа поочередно или запускать весь граф целиком. Для запуска узлов поочередно можно нажать на кнопку \"Запустить узел\" в каждом узле графа по очереди. Для запуска всего графа целиком можно нажать на кнопку \"Запустить граф\" в верхней части интерфейса.",
            "Перезагрузка графа на платформе SMILE означает сброс кэша и перезапуск всех узлов в графе. Это можно сделать, нажав на кнопку \"Перезагрузить граф\" в верхнем правом углу окна.",
            "В различных датафреймах на платформе SMILE могут быть отображены различные данные, в зависимости от задачи и типа модели. Например, в датафрейме с предиктами могут быть показаны вероятности для каждого класса, а в датафрейме с пробами - все признаки и значения, которые использовались для обучения модели.",
            "Функция запуска самого последнего узла модели на платформе SMILE позволяет пересчитать все родительские элементы графа, начиная с самого первого узла и заканчивая последним. Это позволяет быстро обновить все данные и результаты в графе, не запуская каждый узел по отдельности."
        ]
    },
    "4": {
        "Context": "Раздел: Загрузка данных для построения графа на платформе SMILE. Загрузка данных для построения графа на платформе SMILE. Для начала работы с графом на платформе SMILE необходимо загрузить датасет во вкладке \"Данные\" рабочего пространства с помощью кнопки \"Добавить файл\". Платформа SMILE поддерживает данные следующих типов:.csv, .zip, .xlsx, .xlsm, .xls, .xlsb, .xlt, .xlr. Типы поддерживаемых разделителей для .csv файлов: Запятая (,); Точка с запятой (;); Табуляция (\\t); Пробел ( ). Если Excel файл содержит несколько страниц, все страницы будут представлены отдельными файлами.\nПри загрузке архива, он будет распакован и все файлы будут представлены отдельно. Платформа SMILE поддерживает изображения следующих типов: .png, .jpg. Изображение будет конвертировано в табличный формат для дальнейшего восприятия моделью. Максимальный размер загружаемого файла: 1 GB.\nВ начале работы пользователь может использовать готовые наборы данных, предварительно загруженные на платформу SMILE. Для этого необходимо добавить в редактор графа узел \"Модель\" из группы \"Datasets\". Каждая из моделей в данной группе представляет собой набор данных, для работы с которыми необходимо в дальнейшем соединить их с помощью ребра с узлом признака.\nПосле добавления датасета во вкладке \"Данные\" его можно будет просмотреть подробно в формате таблицы, а также при необходимости удалить из системы. Для дальнейшего использования загруженного датасета необходимо нажать галочку \"Выбрано\" во вкладке \"Данные\" у текущего датасета иначе датасет не будет доступен во вкладке \"Редактор\". По умолчанию каждый новый загруженный датасет считается выбранным.\nСоздание узла данных в Редакторе рабочего пространства платформы SMILE. После выбора датасета во вкладке \"Данные\", его можно будет добавить в качестве узла на граф в \"Редакторе\".\nДля добавления узла данных на граф необходимо нажать кнопку \"Новый узел данных\" или клавишу \"D\" и с помощью клика мыши добавить узел на граф. После нажатия на кнопку \"Новый узел данных\" на граф может быть добавлено множество узлов данных. После добавления необходимого количества узлов данных, необходимо нажать на кнопку \"Завершить добавление\" или клавишу \"ESC\" для завершения действия. В \"Признаке\" сразу появится выбранный датасет и при нажатии на узел можно будет настроить используемые столбцы датасета.\nНастройка узла данных в Редакторе рабочего пространства платформы SMILE. При нажатии на узел данных справа будет открываться панель управления узлом, в которой можно настроить используемый датасет. В поле \"Индекс столбец\" можно выбрать столбец, который в датасете используется как столбец для нумерации, идентификации или индексирования данных. Столбец, который выбран как \"Индекс столбец\", не будет в дальнейшем влиять на обучение модели машинного обучения, примененной к узлу данных.\nВ поле \"Признаки\" можно настроить использование конкретных столбцов для дальнейшей работы. Для этого необходимо нажать на галочку рядом с соответствующим названием столбца или на галочку рядом с названием датасета для выбора всех столбцов.",
        "questions_list": [
            "Как загрузить датасет во вкладке \"Данные\" рабочего пространства на платформе SMILE?",
            "Какие типы файлов поддерживаются для загрузки данных на платформу SMILE?",
            "Какие типы разделителей поддерживаются для .csv файлов на платформе SMILE?",
            "Что произойдет, если Excel файл содержит несколько страниц при загрузке на платформу SMILE?",
            "Что происходит при загрузке архива на платформу SMILE?",
            "Какие типы изображений поддерживаются для загрузки на платформу SMILE?",
            "Как обрабатываются изображения после загрузки на платформу SMILE?",
            "Каков максимальный размер загружаемого файла на платформу SMILE?",
            "Как можно использовать готовые наборы данных, предварительно загруженные на платформу SMILE?",
            "Как добавить узел \"Модель\" из группы \"Datasets\" в редактор графа?",
            "Что нужно сделать после добавления датасета во вкладке \"Данные\" для его дальнейшего использования в редакторе?",
            "Как добавить узел данных на граф в редакторе рабочего пространства SMILE?",
            "Какие действия нужно выполнить после нажатия кнопки \"Новый узел данных\" для добавления узлов данных на граф?",
            "Как завершить добавление узлов данных на граф в редакторе рабочего пространства SMILE?",
            "Как настроить используемые столбцы датасета после добавления узла данных на граф?",
            "Что происходит при нажатии на узел данных в редакторе рабочего пространства SMILE?",
            "Как выбрать столбец для нумерации, идентификации или индексирования данных в узле данных?",
            "Как выбрать все столбцы датасета для дальнейшей работы в узле данных?",
            "Что означает поле \"Индекс столбец\" в панели управления узлом данных?",
            "Как настроить использование конкретных столбцов в узле данных?",
            "Какие данные можно просмотреть после загрузки датасета во вкладке \"Данные\"?",
            "Как удалить загруженный датасет из системы на платформе SMILE?",
            "Что произойдет, если не поставить галочку \"Выбрано\" у загруженного датасета во вкладке \"Данные\"?",
            "Как проверить, что новый загруженный датасет выбран по умолчанию?",
            "Какие действия необходимы для создания узла данных в редакторе рабочего пространства SMILE с помощью клавиши \"D\"?",
            "Что происходит при нажатии на кнопку \"Завершить добавление\" или клавишу \"ESC\" в редакторе рабочего пространства SMILE?",
            "Как настроить используемые столбцы датасета для дальнейшей работы с моделью машинного обучения?",
            "Как визуализируются данные после добавления узла данных на граф?"
        ],
        "answers_list": [
            "Для начала работы с графом на платформе SMILE необходимо загрузить датасет во вкладке \"Данные\" рабочего пространства с помощью кнопки \"Добавить файл\".",
            "Платформа SMILE поддерживает следующие типы файлов для загрузки данных:.csv,.zip,.xlsx,.xlsm,.xls,.xlsb,.xlt,.xlr.",
            "Платформа SMILE поддерживает следующие типы разделителей для.csv файлов: запятая (,), точка с запятой (;), табуляция (\\t) и пробел ( ).",
            "Если Excel файл содержит несколько страниц, то при загрузке на платформу SMILE все страницы будут представлены отдельными файлами.",
            "Платформа SMILE распаковывает архив и представляет все файлы отдельно.",
            "Платформа SMILE поддерживает изображения следующих типов:.png,.jpg.",
            "Изображение будет конвертировано в табличный формат для дальнейшего восприятия моделью.",
            "1 ГБ.",
            "Для использования готовых наборов данных, предварительно загруженных на платформу SMILE, необходимо добавить в редактор графа узел \"Модель\" из группы \"Datasets\". Каждая из моделей в данной группе представляет собой набор данных, для работы с которыми необходимо в дальнейшем соединить их с помощью ребра с узлом признака.",
            "Для добавления узла \"Модель\" из группы \"Datasets\" в редактор графа, необходимо нажать на кнопку \"Новый узел данных\" или клавишу \"D\" и с помощью клика мыши добавить узел на граф.",
            "Для дальнейшего использования загруженного датасета необходимо нажать галочку \"Выбрано\" во вкладке \"Данные\" у текущего датасета иначе датасет не будет доступен во вкладке \"Редактор\".",
            "Для добавления узла данных на граф в редакторе рабочего пространства SMILE, необходимо нажать кнопку \"Новый узел данных\" или клавишу \"D\" и с помощью клика мыши добавить узел на граф.",
            "Нужно нажать на кнопку \"Новый узел данных\" или клавишу \"D\" и с помощью клика мыши добавить узел на граф.",
            "Нужно нажать на кнопку \"Завершить добавление\" или клавишу \"ESC\" для завершения действия.",
            "Для настройки используемых столбцов датасета после добавления узла данных на граф, необходимо нажать на узел данных, и в открывшейся панели управления узлом выбрать нужные столбцы в поле \"Признаки\".",
            "Появляется панель управления узлом данных, в которой можно выбрать столбец для нумерации, индексирования или идентификации данных, а также настроить использование конкретных столбцов для дальнейшей работы.",
            "Для выбора столбца для нумерации, идентификации или индексирования данных в узле данных, необходимо перейти в панель управления узлом данных и выбрать соответствующий столбец в поле \"Индекс столбец\".",
            "Для выбора всех столбцов датасета для дальнейшей работы в узле данных, необходимо нажать на галочку рядом с названием датасета в поле \"Признаки\".",
            "В данном поле можно выбрать столбец, который в датасете используется как столбец для нумерации, идентификации или индексирования данных.",
            "Для настройки использования конкретных столбцов в узле данных необходимо нажать на галочку рядом с соответствующим названием столбца или на галочку рядом с названием датасета для выбора всех столбцов.",
            "Да, вы можете просмотреть загруженный датасет в формате таблицы.",
            "Для удаления загруженного датасета из системы на платформе SMILE, необходимо перейти во вкладку \"Данные\" рабочего пространства, выбрать нужный датасет и нажать на кнопку \"Удалить\". Затем подтвердите удаление и датасет будет удален из системы.",
            "Если не поставить галочку \"Выбрано\" у загруженного датасета во вкладке \"Данные\", то этот датасет не будет доступен во вкладке \"Редактор\".",
            "Для проверки, что новый загруженный датасет выбран по умолчанию, необходимо перейти во вкладку \"Данные\" и найти галочку рядом с названием датасета. Если галочка отмечена, то датасет выбран.",
            "Для создания узла данных в редакторе рабочего пространства SMILE необходимо нажать на кнопку \"D\" и с помощью мыши добавить узел на граф.",
            "Кнопка \"Завершить добавление\" или клавишу \"ESC\" в редакторе рабочего пространства SMILE завершает добавление новых узлов данных на граф. После нажатия на эту кнопку или нажатия клавиши \"ESC\", процесс добавления новых узлов данных прекращается, и пользователь может продолжить работу с уже добавленными узлами данных.",
            "Для настройки используемых столбцов датасета необходимо нажать на узел данных, выбрать нужные столбцы и нажать на галочку рядом с названием столбца или датасета.",
            "Вы можете просмотреть загруженный датасет в формате таблицы. Для отдельных столбцов может выводиться количество уникальных значений или столбчатая диаграмма."
        ]
    },
    "5": {
        "Context": "Раздел: загрузка наборов данных.  Чтобы загрузить данные, необходимо перейти на вкладку Данные Модуля и там будет кнопочка большая синяя Загрузка нового файла. Нажимаем на неё. В открывшемся окне есть кнопка Добавить файл в модуль, мы нажимаем на эту кнопочку и выбираем какой-то датасет. Датасет мы можем скачать с Kaggle или у вас есть уже какой-то датасет. По сути, это Excel файл либо CSV файл, там есть какие-то строчки с данными, столбцы с признаками и с этим мы будем работать. Выбираем датасет, нажимаем кнопочку Загрузить. Загрузка пошла, файл был загружен. После того как он был загружен, он отображается в списке. Он отображается справа в отдельном табе, в отдельном меню, и здесь уже частично можно посмотреть про него, про этот файл. То есть здесь есть четыре столбца признака и один целевой столбец. В данном случае это просто ирисы, самый простой датасет. Отлично, мы его загрузили, что дальше. Обязательно необходимо, подчеркну, чтобы файл был выбран. Если файл выбран, то он виден в рамках платформы и графа. То есть здесь вы видите признаки, количество признаков, и здесь они прогружаются. Если мы развыберем этот файл, то в редакторе уже не видно никаких признаков и никаких файлов, которые были загружены. Давайте ещё раз выберем его. И вот здесь всё хорошо, мы можем посмотреть. Как смотреть, будет в отдельном видео, как смотреть, анализировать данные. Если вы один раз добавили файл в платформу, то, во-первых, этот файл виден в общем списке файлов ваших, где можно тоже его немножко развернуть и посмотреть более подробно, что был за файл. Также его можно там скачать, удалить, изменить название, если вас не устраивает и тд. Более важно, что как только вы загрузили файл, вы можете его использовать в рамках своих других проектов, в рамках своих других модулей, например, мы создаём модуль какой-нибудь temporary и в рамках этого модуля на вкладке данные нам уже доступен этот файл. Чтобы с ним начать работу, необходимо просто выбрать его, и после этого он уже будет вам доступен, и вы сможете с ним работать, визуализировать его, анализировать, передавать в модели и совершать остальные прочие действия.",
        "questions_list": [
            "Какую вкладку нужно открыть, чтобы загрузить данные в модуль на платформе SMILE?",
            "Какая кнопка позволяет начать загрузку нового файла в модуль?",
            "Что нужно сделать после нажатия на кнопку \"Загрузка нового файла\"?",
            "Какие типы файлов можно загрузить в модуль на платформе SMILE?",
            "Как узнать, что файл был успешно загружен на платформу?",
            "Где отображается загруженный файл после завершения загрузки?",
            "Что произойдет, если не выбрать загруженный файл для работы?",
            "Как можно просмотреть подробную информацию о загруженном файле?",
            "Какие действия можно выполнить с загруженным файлом в общем списке файлов?",
            "Как сделать загруженный файл доступным для использования в других модулях и проектах на платформе SMILE?"
        ],
        "answers_list": [
            "На платформе SMILE для загрузки данных в модуль необходимо перейти на вкладку \"Данные\" модуля.",
            "Большая синяя кнопка \"Загрузка нового файла\" позволяет начать загрузку нового файла в модуль.",
            "Нужно выбрать датасет, который вы хотите загрузить, и нажать на кнопку \"Загрузить\".",
            "В модуль на платформе SMILE можно загрузить файлы Excel и CSV, а также zip архивы.",
            "Файл будет отображен в списке файлов на вкладке \"Данные\" модуля.",
            "Файл отображается в списке файлов на вкладке \"Данные\" модуля.",
            "Если не выбрать загруженный файл для работы, то в редакторе не будет видно никаких признаков и никаких файлов, которые были загружены.",
            "В списке загруженных файлов можно развернуть информацию о файле, чтобы просмотреть его подробную информацию.",
            "С загруженным файлом в общем списке файлов можно выполнить следующие действия: скачать его, удалить, изменить название, если вас не устраивает, и т.д.",
            "Для того чтобы загруженный файл стал доступен для использования в других модулях и проектах на платформе SMILE, необходимо выбрать его на вкладке \"Данные\" и затем использовать в других модулях или проектах."
        ]
    },
    "6": {
        "Context": "Раздел: создание и настройка узлов моделей в графе. Создание узла модели в Редакторе рабочего пространства платформы SMILE. Для применения алгоритмов к данным в Редакторе используются узлы моделей. Для добавления узла модели на граф необходимо нажать кнопку \"Новый узел модели\" или клавишу \"M\" и с помощью клика мыши добавить узел на граф. После нажатия на кнопку \"Новый узел модели\" на граф может быть добавлено множество узлов моделей. После добавления необходимого количества узлов моделей, необходимо нажать на кнопку \"Завершить добавление\" или клавишу \"ESC\" для завершения действия.\nНастройка узла модели в Редакторе рабочего пространства платформы SMILE. При нажатии на узел модели справа будет открываться панель управления узлом, в которой можно будет настроить алгоритм. В выпадающем списке \"Модель\" в панели управления узлом представлен полный список алгоритмов, доступных на платформе.\nДля удобства работы модели разделены на категории, в рамках которых можно выбрать нужное направление работы с данными. Внутри каждой категории отображается несколько наиболее популярных моделей, которые можно выбрать не раскрывая полный список. Список доступных моделей может быть ограничен, в случае, если пользователь самостоятельно отключает один из алгоритмов.После выбора необходимой модели в панели управления узлом будут доступны настройки, которые позволяют выбирать необходимые параметры работы с алгоритмом.Расширенные настройки для каждого алгоритма индивидуальны, однако подбор этих настроек может быть необходим для работы модели.\nСоединение узлов графа в Редакторе с помощью Ребра. После добавления необходимых узлов на граф в Редакторе нужно соединить их между собой ребрами для дальнейшего взаимодействия. Для этого необходимо на панели управления выбрать \"Новое Ребро\" или нажать клавишу \"E\" и далее соединить с помощью курсора два узла между собой. После нажатия на кнопку \"Новое ребро\" на граф может быть добавлено множество ребер. После добавления необходимого количества ребер, необходимо нажать на кнопку \"Завершить добавление\" или клавишу \"ESC\" для завершения действия. Ребра в Редакторе платформы SMILE имеют одно направление, учитывайте это при соединении узлов. В зависимости от поставленной задачи соединяться могут как узлы данных и моделей, так и узлы моделей между собой. При создании ребра и соединении им узлов графа Редактора, его можно настроить в качестве фильтра.Для этого необходимо выбрать ребро и в открывшейся панели управления настроить признаки, которые будут передаваться в другие узлы по направлению ребра.\nЗапуск графа и узлов в Редакторе платформы SMILE. После того, как все необходимые узлы добавлены и соединены ребрами, можно перейти к расчету графа. Для расчета всех узлов графа необходимо нажать кнопку \"Запустить граф\", после чего все узлы будут рассчитаны в порядке, в котором они соединены с помощью ребер.При необходимости, можно производить расчет отдельных узлов через панель управления моделями, нажав кнопку \"Рассчитать\". После расчета в узлах моделей при открытии панели настроек может появляться информация о расчетах, например измененные данные или оценка результатов. После расчета отображение узлов на графе изменится, что будет означать, что расчет был произведен при данных настройках модели. Если изменить настройки модели, то отображение узла также изменится и необходимо будет произвести повторный расчет данного узла или графа целиком.",
        "questions_list": [
            "Как добавить новый узел модели на граф в Редакторе?",
            "Какие клавиши можно использовать для добавления узла модели?",
            "Что необходимо сделать после добавления нужного количества узлов моделей?",
            "Где находятся настройки для узла модели в Редакторе?",
            "Какой функционал доступен в панели управления узлом модели?",
            "Как выбрать нужный алгоритм в узле модели?",
            "Какие категории моделей существуют на платформе SMILE?",
            "Что можно сделать, если нужный алгоритм не отображается в списке?",
            "Какие параметры можно настроить для выбранной модели?",
            "Как соединить узлы на графе в Редакторе?",
            "Какие клавиши можно использовать для создания нового ребра?",
            "Как завершить добавление ребер после их создания?",
            "Какое направление имеют ребра на платформе SMILE?",
            "Какие узлы могут быть соединены ребрами?",
            "Как настроить ребро в качестве фильтра?",
            "Какие признаки можно настроить в ребре?",
            "Как запустить расчет графа в Редакторе?",
            "Как рассчитать отдельные узлы на графе?",
            "Какую информацию можно увидеть после расчета узлов?",
            "Что произойдет, если изменить настройки модели после расчета узла?"
        ],
        "answers_list": [
            "Нажмите на кнопку \"Новый узел модели\" или используйте комбинацию клавиш \"M\", чтобы добавить узел модели на граф.",
            "Для добавления узла модели можно использовать клавишу M.",
            "Нажать на кнопку \"Завершить добавление\" или клавишу \"ESC\" для завершения действия.",
            "Настройки для узла модели находятся в панели управления узлом, которая открывается при нажатии на узел модели.",
            "В панели управления узлом модели доступны следующие функции: выбор модели, настройка параметров работы с алгоритмом, расширенные настройки (если они доступны для выбранной модели).",
            "В панели управления узлом модели в выпадающем списке \"Модель\" представлен полный список алгоритмов, доступных на платформе. Для удобства работы модели они разделены на категории, в рамках которых можно выбрать нужное направление работы с данными.",
            "На платформе SMILE существуют следующие категории моделей: Классификация, Регрессия, Кластеризация, Загрузка готовых датасетов, Предобработка данных, Разделение на выборки, Оптимизация гиперпараметров, Балансировка, Работа с выбросами, Оценка моделей, Уменьшение размерности, Временные ряды, Интерполяция, AutoML, Компьютерное зрение.",
            "Если нужный алгоритм не отображается в списке, необходимо проверить, не отключен ли алгоритм на странице Модели.",
            "В панели управления узлом представлен полный список алгоритмов, доступных на платформе. Для удобства работы модели разделены на категории, в рамках которых можно выбрать нужное направление работы с данными. Внутри каждой категории отображается несколько наиболее популярных моделей, которые можно выбрать не раскрывая полный список. Список доступных моделей может быть ограничен, в случае, если пользователь самостоятельно отключает один из алгоритмов.",
            "Для соединения узлов на графе в Редакторе необходимо выбрать \"Новое ребро\" или нажать клавишу \"E\" и соединить с помощью курсора два узла между собой.",
            "Для создания нового ребра можно нажать клавишу E и далее соединить с помощью курсора два узла между собой.",
            "Нужно нажать на кнопку \"Завершить добавление\" или клавишу \"ESC\" для завершения действия.",
            "Ребра на платформе SMILE имеют одно направление.",
            "Узлы данных и узлы моделей могут быть соединены ребрами.",
            "Для настройки ребра в качестве фильтра необходимо выбрать ребро и в открывшейся панели управления настроить признаки, которые будут передаваться в другие узлы по направлению ребра.",
            "В ребре можно настроить признаки, которые будут передаваться в другие узлы по направлению ребра.",
            "Нужно нажать кнопку \"Запустить граф\".",
            "Нужно нажать на кнопку \"Рассчитать\" в панели управления моделями.",
            "В узлах моделей при открытии панели настроек может появляться информация о расчетах, например измененные данные или оценка результатов.",
            "Если изменить настройки модели после расчета узла, то отображение узла также изменится, и необходимо произвести повторный расчет данного узла или графа целиком."
        ]
    },
    "7": {
        "Context": "Раздел: модели группы DataframeOperations - DataframeMath. Преобразование данных на платформе SMILE. Преобразование данных - один из важнейших процессов при решении задач машинного обучения. Когда классические методы не помогают, необходимо вручную извлекать полезную информацию из признаков путем преобразований данных. Для этого в платформе SMILE используются модели группы DataframeOperations.\nМодель DataframeRename. Модель предназначена для переименования столбцов в наборе данных. Модель DataframeRename будет иметь в параметрах соответствующие входному набору данных столбцы с возможностью для каждого из них задать новое название.\nМодель DataframeMath. Модель позволяет преобразовывать данные, используя математические операции, как одного столбца, так и нескольких столбцов. Модель DataframeMath имеет следующие параметры: select_columns_by - принцип выбора столбцов для производимого действия; return_col_name - название возвращаемых после преобразования столбцов; expression - произвольное пользовательское выражение по правилам синтаксиса Pandas.\nПоддерживаются следующие принципы выбора столбцов для производимого действия select_columns_by: custom (логика определения столбцов зависит от параметра \"expression\"); name (выбор столбцов по названию из текущего списка. При выборе данного столбца необходимо будет заполнить параметр \"column_names\", в котором будут указаны столбцы для преобразования); type (выбор столбцов в зависимости от типа данных. При выборе данного столбца необходимо будет заполнить параметр \"column_types\", в котором будут указаны типы данных в столбцах для преобразования).\nМодель DataframeMath. Пример нормализации значений. На примере набора данных Titanic - Machine learning from disaster рассмотрим нормализацию данных. Необходимо нормализовать значения столбца Age в ручном режиме с помощью параметра expression. Для обращения к конкретному столбцу будем использовать следующее выражение:${Название столбца}. Необходимо заполнить параметры модели DataframeMath следующим образом: select_columns_by - CUSTOM; return_col_name - age_normalized; expression - (${Age}-${Age}.min())/(${Age}.max)()-${Age}.min()). После выполнения модели в набор данных будет добавлен столбец age_normalized, в котором будут находиться значения, нормализованные согласно нашему выражению.\nМодель DataframeMath. Пример логарифмического преобразования нескольких признаков. На примере набора данных Titanic - Machine learning from disaster рассмотрим логарифмическое преобразование на примере выбора столбцов по названию. Для этого необходимо заполнить параметры модели DataframeMath следующим образом: select_columns_by - NAME;\ncolumn_names - выбрать столбцы вручную, значения которых необходимо прологарифмировать; return_col_name - _sin;\nexpression - np.sin(${__serial__}). В данном случае вместо конкретного столбца, требуется ввести обращение __serial__ для применения логарифмического преобразования ко всем столбцам выбранного типа данных.\"\nМодель DataframeMath. Пример изменения признаков одного типа данных. На примере набора данных Titanic - Machine learning from disaster рассмотрим преобразование данных вещественного типа в целочисленный. Вещественный тип данных представляет собой числа в виде десятичной дроби, а целочисленные представляют собой числа без дробной части. Для данного преобразования необходимо заполнить параметры модели DataframeMath следующим образом: select_columns_by - TYPE; column_types - float (вещественный тип данных); return_col_name - to_int; expression - ${__serial__}.astype(int).\nМодель DataframeMath. Пример сортировки данных по индексу или значению. На примере набора данных Titanic - Machine learning from disaster рассмотрим сортировку данных. Для единовременного обращения к целому набору данных используется оператор __df. Применение сортировки возвращает в наборе данных все столбцы с постфиксом _transformed, поэтому параметр return_col_name игнорируется. Для сортировки набора данных по индексу необходимо заполнить параметры модели DataframeMath следующим образом: select_columns_by - CUSTOM; expression - ${__df}.sort_index(). Для сортировки набора данных по значениям столбца необходимо заполнить параметры модели DataframeMath следующим образом: select_columns_by - CUSTOM; expression - ${__df}.sort_values(['Age']).",
        "questions_list": [
            "Какие модели входят в группу DataframeOperations на платформе SMILE?",
            "Для чего предназначена модель DataframeRename?",
            "Какие параметры можно задать в модели DataframeRename для переименования столбцов?",
            "Какие типы выбора столбцов поддерживает параметр select_columns_by в модели DataframeMath?",
            "Что означает параметр \"custom\" в модели DataframeMath для выбора столбцов?",
            "Какие действия позволяет выполнять модель DataframeMath с использованием математических операций?",
            "Какие параметры необходимо задать для логарифмического преобразования нескольких признаков в модели DataframeMath?",
            "Как происходит выбор столбцов для логарифмического преобразования в модели DataframeMath при выборе \"NAME\"?",
            "Какие типы данных поддерживаются для преобразования в целочисленные с помощью модели DataframeMath?",
            "Как изменить тип данных столбцов на целочисленный в модели DataframeMath для вещественных чисел?",
            "Каким образом модель DataframeMath выполняет сортировку данных по индексу?",
            "Какие параметры необходимо задать для сортировки набора данных по индексу с помощью модели DataframeMath?",
            "Что происходит при сортировке данных по значениям столбца с помощью модели DataframeMath?",
            "Какие дополнительные действия можно выполнить после преобразования данных с помощью моделей DataframeRename и DataframeMath?",
            "Какие выражения могут использоваться в параметре expression модели DataframeMath для сложных математических операций?",
            "Какие выгоды предоставляет возможность выбора столбцов по типу данных в модели DataframeMath?",
            "Как можно настроить модель DataframeMath для преобразования данных вещественного типа с использованием пользовательского выражения?",
            "Какие ограничения или особенности имеются при работе с моделями DataframeOperations - DataframeMath на платформе SMILE?"
        ],
        "answers_list": [
            "В группу DataframeOperations на платформе SMILE входит множество моделей для преобразования данных, основными из них являются: DataframeMath, DataFrameRename, Filter, GroupBy, DataframeConcat, DataframeMerge, DataFrameReplace и тд.",
            "Модель DataframeRename предназначена для переименования столбцов в наборе данных.",
            "Модель DataframeRename имеет параметр column_names, который позволяет задать новые названия столбцов.",
            "Параметр select_columns_by в модели DataframeMath поддерживает следующие типы выбора столбцов: custom, name и type.",
            "Параметр \"custom\" в модели DataframeMath позволяет определять столбцы для преобразования на основе пользовательского выражения в \"expression\".",
            "Модель DataframeMath позволяет выполнять преобразования данных с использованием математических операций, таких как сложение, вычитание, умножение и деление, как для одного столбца, так и для нескольких столбцов.",
            "Для логарифмического преобразования нескольких признаков в модели DataframeMath необходимо задать параметры select_columns_by, column_names, return_col_name и expression.",
            "Выбор столбцов для логарифмического преобразования при выборе \"NAME\" в модели DataframeMath происходит по имени столбцов, которые указаны в параметре \"column_names\".",
            "Модель DataframeMath поддерживает преобразование данных вещественного типа в целочисленный.",
            "Для изменения типа данных столбцов на целочисленный в модели DataframeMath для вещественных чисел необходимо использовать параметр \"expression\" и указать необходимую операцию преобразования.",
            "Модель DataframeMath выполняет сортировку данных по индексу с помощью параметра \"expression\", который принимает значение \"${__df}.sort_index()\". Это выражение указывает на то, что данные должны быть отсортированы в соответствии с индексами строк в данных.",
            "Для сортировки набора данных по индексу необходимо задать параметры: select_columns_by - CUSTOM; expression - ${__df}.sort_index().",
            "Модель DataframeMath позволяет сортировать данные в наборе данных по значениям столбца. Для этого необходимо указать столбец, по которому нужно выполнить сортировку, в параметре expression.",
            "С помощью модели DataframeRename можно переименовать столбцы в наборе данных, а с помощью модели DataframeMath - преобразовывать данные, используя математические операции, как одного столбца, так и нескольких столбцов.",
            "В параметре expression модели DataframeMath могут использоваться различные математические операции, такие как сложение, вычитание, умножение, деление, возведение в степень, взятие корня и т.д. Также можно использовать функции, такие как sin, cos, tan, log и т.д.",
            "Модель DataframeMath позволяет выбирать столбцы для преобразования по типу данных, что позволяет гибко управлять выбором признаков для преобразования. Это особенно полезно, когда необходимо изменить тип данных для нескольких столбцов одновременно.",
            "Для настройки модели DataframeMath для преобразования данных вещественного типа с использованием пользовательского выражения необходимо указать параметры select_columns_by, return_col_name и expression. В параметре select_columns_by выбрать тип данных float, в return_col_name указать новое название столбца и в expression ввести пользовательское выражение для преобразования данных.",
            "На платформе SMILE при работе с моделями DataframeOperations - DataframeMath могут возникнуть следующие ограничения или особенности:\n\n- Модели DataframeOperations - DataframeMath предназначены для работы с наборами данных в формате DataFrame.\n- Модели DataframeOperations - DataframeMath поддерживают различные типы данных, такие как целые числа, вещественные числа, строки и т.д.\n- Модели DataframeOperations - DataframeMath могут выполнять различные операции с данными, такие как преобразование типов данных, фильтрацию данных, сортировку данных и т.д.\n- Модели DataframeOperations - DataframeMath могут работать с большими наборами данных, но время выполнения операций может зависеть от размера и сложности данных.\n- Модели DataframeOperations - DataframeMath могут быть использованы в различных задачах машинного обучения, таких как анализ данных, обучение моделей и т.д."
        ]
    },
    "8": {
        "Context": "Раздел: прочие модели группы DataFrameOperations. Модели группы DataframeOperations. Модель DataframeFilter. Модель предназначается для фильтрации данных по отдельным столбцам или индексу. Модель DataframeFilter имеет следующие параметры: column - выбор столбца, значения которого будут сравниваться для фильтрации; condition - условия сравнений, представленные в виде набора математических операторов; column_to - столбец, с которым происходит сравнение, по умолчанию заполняется значением \"empty\", что подразумевает сравнение с значением параметра \"value\"; value - значение для сравнения с условием, которое не относится непосредственно к набору данных; expression - произвольное пользовательское выражение по правилам синтаксиса \"Pandas\", при его заполнении остальные параметры будут проигнорированы; reset_index - сброс индекса после фильтрации.\nМодель DataframeFilter. Пример фильтрации по условию. На примере набора данных Titanic - Machine learning from disaster рассмотрим фильтрацию данных пользователей по возрасту. Необходимо отфильтровать данные людей, возраст которых больше 35 лет. Для данного преобразования необходимо заполнить параметры модели следующим образом: column - Age; condition - >; column_to - empty; value - 35; reset_index - false.\nМодель DataframeFilter. Пример фильтрации с помощью выражения. На примере набора данных Titanic - Machine learning from disaster рассмотрим фильтрацию данных пользовательским выражением. Необходимо отфильтровать данные людей, возраст которых больше 35 лет и пол женский. Для данного преобразования необходимо заполнить параметр expression модели следующим образом: expression - (${Age}>35)&(${Gender}=='Female'). В случае наличия синтаксических ошибок в выражениях или отсутствия данных после фильтрации платформа SMILE будет уведомлять с помощью сообщений в узле модели. Модель возвращает отфильтрованный набор данных с идентичными названиями столбцов.\nМодели группы DataframeOperations. Модель DataframeGroupBy. Модель предназначается для группировки данных внутри одного из наборов. Модель DataframeGroupBy имеет следующие параметры: group-by - выбор столбцов для группировки; as-index - установление выбранного столбца в параметре \"group_by\" в качестве индекса выходного набора данных. В случае выбора столбца группировки, как индекса, доступ обращения к нему напрямую в выходном наборе данных исчезнет; operation-count - выбор столбцов для подсчета количества значений; operation-min - выбор столбцов для отображения минимального значения; operation-max - выбор столбцов для отображения максимального значения; operation-sum - выбор столбцов для отображения суммы значений; operation-first- выбор столбцов для отображения первого значения; operation-last - выбор столбцов для отображения последнего значения; operation-mean - выбор столбцов для отображения среднего значения; operation-median- выбор столбцов для отображения медианного значения; operation-std - выбор столбцов для отображения стандартного отклонения значений в столбце.\nМодель DataframeGroupBy. Пример группировки данных. На примере набора данных Titanic - Machine learning from disaster рассмотрим группировку данных. Необходимо сгруппировать данные людей, чтобы отобразить для мужского и женского пола: подсчет количества значений в столбце возраст; максимальный возраст; минимальный возраст;\nДля данного преобразования необходимо заполнить параметры модели следующим образом: group-by - Gender;  as-index - false; operation-count - Age; operation-max - Age; operation-min - Age.\"\n\"Модели группы DataframeOperations. Модель DataframeReplace. Модель предназначается для замены конкретных значений в наборе данных на пользовательские. Модель DataframeReplace имеет следующие параметры: columns - столбцы, в которых необходимо заменить значения;\nto_replace - значения, которые необходимо заменить. Несколько значений могут введены последовательно через знак запятой; result - пользовательское значение, на которое нужно заменить исходные данные; После применения модели к набору данных, преобразованные столбцы будут помечены постфиксом _transformed.\"\n\"Модели группы DataframeOperations. Модель DataframeReplace. Пример замены числовых значений. На примере набора данных Titanic - Machine learning from disaster рассмотрим замену значений в наборе данных. Необходимо в столбце Pclass заменить значения \"\"1\"\", \"\"2\"\", \"\"3\"\" на значение 0. Для данного преобразования необходимо заполнить параметры модели следующим образом: columns - PClass; to_replace - 1,2,3;\nresult - 0.\"\nМодель DataframeReplace. Пример замены значений в строках. На примере предобработанного набора данных \"Титаник\" рассмотрим замену значений в наборе данных. Необходимо в столбце \"Титул\" заменить часть значений на \"Другое\". Для данного преобразования необходимо заполнить параметры модели следующим образом: columns - titul; to_replace - Capt, Col, Don, Dr, Jonkheer, Major; result - Other.\nМодели группы DataframeOperations. Модель DataframeMerge. Модель предназначена для объединения наборов данных между собой по столбцам в один конечный набор данных. Модель DataframeMerge имеет следующие параметры: left_on - столбцы для слияния из таблицы \"слева\", соответствующие столбцам из \"правой\" таблицы; right_on - столбцы для слияния из таблицы \"справа\", соответствующие столбцам из \"левой\" таблицы; left_index - слияние по индексу из таблицы \"слева\"; right_index - слияние по индексу из таблицы \"справа\"; on - выбор столбца, находящегося в \"левой\" и \"правой\" таблице для слияния по нему; how - выбор способа слияния таблиц; left_suffix - постфикс, добавляемый к столбцам выходного набора данных, взятых из \"левой\" таблицы; right_suffix - постфикс, добавляемый к столбцам выходного набора данных, взятых из \"правой\" таблицы.\nМодель DataframeMerge. how - выбор способа слияния таблиц: left - сохраняет все значения из \"левой\" таблицы и подставляет пересекающиеся значения из \"правой\" таблицы. В случае, когда пересекающиеся значения отсутствуют и в \"правой\" таблице, они заполняются пустыми Nan значениями. right - сохраняет все значения из \"правой\" таблицы и подставляет пересекающиеся значения из \"левой\" таблицы. В случае, когда пересекающиеся значения отсутствуют и в \"левой\" таблице, они заполняются пустыми Nan значениями. outer - объединение всех значений; inner - объединение значений, которые присутствуют в обеих таблицах; cross - декартовое произведение \"левой\" и \"правой\" таблиц.\nМодель DataframeMerge. Пример слияния таблиц. На примере набора данных \"\"О ценах на фрукты\"\" рассмотрим слияние двух наборов данных. Необходимо объединить данные из файлов apple_renamed и apricot_renamed по столбцам price_max и price_min. Для данного преобразования необходимо заполнить параметры модели следующим образом: \non - apple_price_max, apple_price_min, apricot_price_max, apricot_price_min; how - outer. В случае совпадения столбцов в наборах данных можно использовать параметры left_on и right_on.\"\nМодели группы DataframeOperations. Модель DataframeConcat. Модель предназначена для объединения наборов данных между собой по строкам в один конечный набор данных. Модель DataframeConcat имеет следующие параметры: reset_index - сброс индекса у выходного набора данных; axis - выбор оси для объединения (index - вертикальная ось, строки будут добавлены в текущий набор данных; columns - горизонтальная ось, строки будут добавлены, аналогично модели DataframeMerge); join - выбор способа объединения (inner - объединение строк, пересекающихся столбцов; outer - объединение всех строк, с заполнением отсутствующих значений пустыми); ignore_index - игнор индекса; sort_index - сортировка по индексу после объединения наборов данных.\nМодель DataframeConcat. Пример конкатинации таблиц. На примере набора данных \"\"О ценах на фрукты\"\" рассмотрим конкатинацию таблиц. Необходимо соединить строки таблицы apple и apricot со сбросом индекса. Для данного преобразования необходимо заполнить параметры модели следующим образом: reset_index - true; axis - index; join - inner; ignore_index - false;\nsort_index - false.\"\nМодели группы DataframeOperations. Модель DataframeReset. Модель предназначена для сброса индексов набора данных. Модель может быть полезна в случаях работы с наборами данных, в которых проводились построчные изменения (конкатинация, смещение и другие) для сброса индексов или названий столбцов всего набора данных. Модель DataframeReset имеет следующие параметры: axis - направление сброса данных (index - сброс по вертикали (индексов); columns - сброс по горизонтали (названия столбцов)); drop - сброс индекса у выходного набора данных. \nМодели группы DataframeOperations. Модель DropByNone. Модель предназначена для удаления строк, выбранные столбцы которых содержат пустые значения. Модель \"DropByNone\" имеет следующие параметры: columns - выбор столбцов, в которых проводится поиск пустых значений для дальнейшего удаления строк. По умолчанию модель DropByNone выбирает в параметре \"columns\" все столбцы, в которых есть пустые значения. При необходимости столбцы могут быть выбраны вручную.\nМодель DropByNone. Пример удаления пустых значений. На примере набора данных Titanic - Machine learning from disaster рассмотрим удаление строк с пустыми значениями. Необходимо удалить строки, которые содержат пропуски в столбцах Age, Cabin, Embarked. Для данного преобразования необходимо заполнить параметры модели следующим образом: columns - Age, Cabin, Embarked.\nМодели группы DataframeOperations. Модель DropByValue. Модель предназначены для удаления строк, выбранные столбцы которых содержат конкретные значения. Модель DropByValue имеет следующие параметры: columns - выбор столбцов, в которых проводится поиск пользовательских значений для дальнейшего удаления строк; value - значения для поиска в столбцах, несколько значений можно ввести через запятую.\nМодель DropByValue. Пример удаления конкретных значений. На примере набора данных Titanic - Machine learning from disaster рассмотрим удаление строк с конкретными значениями. Необходимо удалить строки, которые содержат значения male, female. Для данного преобразования необходимо заполнить параметры модели следующим образом: columns - All, все столбцы набора данных; value - male, female. При этом в данном случае будут удалены все столбцы, поэтому выходного набора данных не будет существовать.",
        "questions_list": [
            "Что такое модель DataframeFilter и для чего она используется?",
            "Какие параметры принимает модель DataframeFilter?",
            "Какой формат должен быть у параметра column в модели DataframeFilter?",
            "Как задать условие сравнения в модели DataframeFilter?",
            "Что означает параметр column_to в модели DataframeFilter?",
            "Каким образом задается значение для сравнения в модели DataframeFilter?",
            "Как использовать пользовательское выражение в модели DataframeFilter?",
            "В чем разница между параметрами value и expression в модели DataframeFilter?",
            "Какой эффект оказывает параметр reset_index в модели DataframeFilter?",
            "Как модель DataframeFilter обрабатывает синтаксические ошибки в пользовательских выражениях?",
            "Какие типы операций поддерживает модель DataframeGroupBy?",
            "Какие параметры необходимы для выполнения группировки в модели DataframeGroupBy?",
            "Что делает параметр as-index в модели DataframeGroupBy?",
            "Какая разница между внутренним и внешним объединением в модели DataframeMerge?",
            "Как задать столбцы для слияния в модели DataframeMerge?",
            "В чем заключается функциональность модели DataframeConcat?",
            "Какие параметры определяют порядок объединения строк в модели DataframeConcat?",
            "Для чего используется модель DataframeReset?",
            "Какие направления сброса поддерживает модель DataframeReset?",
            "Что делает модель DropByNone и какие у нее параметры?"
        ],
        "answers_list": [
            "Модель DataframeFilter предназначена для фильтрации данных по отдельным столбцам или индексу.",
            "Модель DataframeFilter принимает следующие параметры: column - выбор столбца, значения которого будут сравниваться для фильтрации; condition - условия сравнений, представленные в виде набора математических операторов; column_to - столбец, с которым происходит сравнение, по умолчанию заполняется значением \"empty\", что подразумевает сравнение с значением параметра \"value\"; value - значение для сравнения с условием, которое не относится непосредственно к набору данных; expression - произвольное пользовательское выражение по правилам синтаксиса \"Pandas\", при его заполнении остальные параметры будут проигнорированы; reset_index - сброс индекса после фильтрации.",
            "Параметр column должен быть в формате столбца, который будет использоваться для фильтрации данных.",
            "В модели DataframeFilter условие сравнения задается в параметре condition.",
            "Параметр column_to в модели DataframeFilter используется для сравнения значений столбца, указанного в параметре column, с другим столбцом в наборе данных. Если параметр column_to не указан, то по умолчанию сравниваются значения столбца, указанного в параметре column, с значением параметра value.",
            "Модель DataframeFilter имеет параметр value, который задает значение для сравнения с условием.",
            "Для использования пользовательского выражения в модели DataframeFilter необходимо заполнить параметр expression модели по правилам синтаксиса Pandas.",
            "Параметр value используется для сравнения с конкретным значением, которое не относится к набору данных, а параметр expression позволяет использовать произвольное пользовательское выражение по правилам синтаксиса \"Pandas\".",
            "Параметр reset_index в модели DataframeFilter позволяет сбросить индекс после фильтрации данных.",
            "Модель DataframeFilter в случае наличия синтаксических ошибок в выражениях или отсутствия данных после фильтрации уведомляет с помощью сообщений в узле модели.",
            "Модель DataframeGroupBy поддерживает следующие типы операций: подсчет количества значений, выбор максимального, минимального, суммарного, среднего и медианного значения, а также выбор первого и последнего значения в группе.",
            "1. group-by - выбор столбцов для группировки;\n2. as-index - установление выбранного столбца в параметре \"group_by\" в качестве индекса выходного набора данных;\n3. operation-count - выбор столбцов для подсчета количества значений;\n4. operation-min - выбор столбцов для отображения минимального значения;\n5. operation-max - выбор столбцов для отображения максимального значения;\n6. operation-sum - выбор столбцов для отображения суммы значений;\n7. operation-first - выбор столбцов для отображения первого значения;\n8. operation-last - выбор столбцов для отображения последнего значения;\n9. operation-mean - выбор столбцов для отображения среднего значения;\n10. operation-median - выбор столбцов для отображения медианного значения;\n11. operation-std - выбор столбцов для отображения стандартного отклонения значений в столбце.",
            "Параметр as-index в модели DataframeGroupBy позволяет выбрать столбец, который будет использоваться в качестве индекса для выходного набора данных.",
            "Внутреннее объединение (inner) сохраняет только те значения, которые присутствуют в обоих таблицах. Внешнее объединение (outer) сохраняет все значения из обоих таблиц.",
            "Для задания столбцов для слияния в модели DataframeMerge необходимо использовать параметр \"left_on\" или \"right_on\", в зависимости от того, из какой таблицы берутся данные.",
            "Модель DataframeConcat предназначена для объединения наборов данных между собой по строкам в один конечный набор данных.",
            "1. axis - выбор оси для объединения (index - вертикальная ось, строки будут добавлены в текущий набор данных; columns - горизонтальная ось, строки будут добавлены, аналогично модели DataframeMerge);\n2. join - выбор способа объединения (inner - объединение строк, пересекающихся столбцов; outer - объединение всех строк, с заполнением отсутствующих значений пустыми);\n3. ignore_index - игнор индекса;\n4. sort_index - сортировка по индексу после объединения наборов данных.",
            "Модель DataframeReset используется для сброса индексов набора данных.",
            "Модель DataframeReset поддерживает два направления сброса: по вертикали (индексов) и по горизонтали (названия столбцов).",
            "Модель DropByNone удаляет строки, выбранные столбцы которых содержат пустые значения. Ее параметры: columns - выбор столбцов, в которых проводится поиск пустых значений для дальнейшего удаления строк."
        ]
    },
    "9": {
        "Context": "Раздел: обработка данных на платформе SMILE.  Обработка данных на платформе SMILE. Обработка данных один из важнейших процессов при решении задач машинного обучения. Предварительная обработка данных позволяет не только привести информацию к виду, который подходит для моделей машинного обучения, но и улучшить конечные результаты предсказания. \n Обработка данных на платформе SMILE осуществляется с помощью узлов \"Моделей\", которые применяются к узла \"Признак\". В случае необходимости алгоритмы обработки данных могут применяться последовательно друг за другом, а также использоваться модели из одной и той же категории.После работы моделей обработки данных могут сформироваться новые столбцы, которые будут необходимы для дальнейшей работы.\n Обработка отсутствующих значений. Отсутствующие значения являются одной из самых важных \"проблем\" с данными, так как могут стать причиной ошибки работы модели машинного обучения. Отсутствующим значением считается любой пропуск информации в наборе данных. Для работы с отсутствующими значениями на платформе SMILE существует несколько моделей категории Imputer: SimpleImputer - \"простое\" заполнение, например, заполнение отсутствующих значений средним, медианой или каким-то другим числом; KNNImputer - \"умное\" заполнение отсутствующих значений, методом на основе алгоритма k-ближайших соседей.\n Работа с категориальными признаками. Большинство алгоритмов машинного обучения не могут работать с категориальными данными, которые зачастую являются неотъемлемой частью информации, необходимой для решения прикладных задач. Категориальным признаком считается любое значение, которое не определяется числом. Кодирование категориальных признаков числами позволяет модели не только правильно воспринимать данные, но и обучаться на них. Для работы с категориальными признаками на платформе SMILE существует несколько моделей категории Encoder: LabelEncoder - заменяет каждый уникальный категориальный признак числом, например для мужского пола - 0, для женского - 1; OneHotEncoder - вместо каждого уникального значения категориального признака создается столбец, после чего в столбцах отмечается наличие или отсутствие признака; OrdinalEncoder - кодирование категориальных признаков в виду целочисленного массива.\n Обработка аномальных значений. Аномальные значения (выбросы) могут оказывать влияние на обучение модели, а как следствие и предсказание данных. Выбросами считаются те данные, которые значительно выбиваются из общего распределения выборки. Наглядным способом визуализации аномальных значений являются графики понижения размерности и \"ящик с усами\".\n Обработка аномальных значений. На платформе SMILE для работы с выбросами существует категория моделей \"OutlierModel\", которая включает в себя: LocalOutlierFactor, EllipticEnvelope, OneClassSVM, IsolationForest\n Масштабирование выборки. Масштабирование выборки подразумевает приведение значений различных признаков к одному порядку. Масштабирование может применяться, например в случаях, когда один из признаков измеряется в диапазоне от 0 до 1, а другой от 100 до 1000. На платформе SMILE для работы с выбросами существует категория моделей \"Scaler\", которая включает в себя: MinMaxScaler, MaxAbsScaler, RobustScaler, StandardScaler, Normalizer.\n Пользовательские операции. На платформе SMILE пользователь имеет возможность самостоятельно совершать операции с набором данных. Для этого могут быть использованы модели из категории DataFrameOperations. Наиболее популярные модели  категории DataFrameOperations, доступные на платформе SMILE: DataFrameDropDuplicates - позволяет удалить дублирующиеся значения; DataFrameMath - позволяет совершать математические операции с помощью расширенных настроек узла модели; DataFrameRename - позволяет переименовать столбцы датасета; DataFrameReplace - позволяет заменять отсутствующие значения.",
        "questions_list": [
            "Какие основные цели предварительной обработки данных на платформе SMILE?",
            "Какие модели используются для обработки данных в узлах \"Модели\" на платформе SMILE?",
            "Можно ли применять алгоритмы обработки данных последовательно друг за другом на платформе SMILE?",
            "Как осуществляется  обработки данных на платформе SMILE?",
            "Каким образом формируются новые столбцы после работы моделей обработки данных на платформе SMILE?",
            "Что такое отсутствующее значение в наборе данных?",
            "Почему важно правильно обрабатывать отсутствующие значения?",
            "Какие модели категории Imputer используются для работы с отсутствующими значениями на платформе SMILE?",
            "Что такое категориальный признак в наборе данных?",
            "Почему необходимо кодировать категориальные признаки?",
            "Какие модели категории Encoder используются для работы с категориальными признаками на платформе SMILE?",
            "Что представляют собой аномальные значения в наборе данных?",
            "Как их можно обнаружить и обработать на платформе SMILE?",
            "Какие модели категории OutlierModel используются для работы с аномальными значениями на платформе SMILE?",
            "Что такое масштабирование выборки данных?",
            "Какие модели применяются на платформе SMILE для масштабирования выборки данных?",
            "Как пользователь может самостоятельно совершать операции с набором данных на платформе SMILE?",
            "Какие модели категории DataFrameOperations являются наиболее популярным?",
            "Какую задачу решает модель DataFrameDropDuplicates на платформе SMILE?",
            "Какие математические операции можно выполнять с помощью модели DataFrameMath на платформе SMILE?",
            "Что делает модель DataFrameRename в узле моделей на платформе SMILE?",
            "Какую функцию выполняет модель DataFrameReplace на платформе SMILE?",
            "Как модель LabelEncoder кодирует категориальные признаки на платформе SMILE?",
            "В чем разница между OneHotEncoder и OrdinalEncoder при работе с категориальными данными на платформе SMILE?",
            "Какие типы данных можно обрабатывать с помощью моделей категории OutlierModel на платформе SMILE?",
            "Какие параметры можно настраивать при использовании модели KNNImputer для заполнения отсутствующих значений на платформе SMILE?"
        ],
        "answers_list": [
            "Приведение данных к виду, который подходит для машинного обучения, и улучшение конечных результатов предсказания.",
            "В узлах \"Модели\" на платформе SMILE используются модели категории \"Imputer\", \"Encoder\", \"OutlierModel\", \"Scaler\" и \"DataFrameOperations\".",
            "Да, на платформе SMILE алгоритмы обработки данных можно применять последовательно друг за другом.",
            "Операции по обработке данных на платформе SMILE выполняются с помощью узлов \"Моделей\", которые применяются к узлу \"Признак\".",
            "На платформе SMILE новые столбцы формируются в результате работы моделей обработки данных. Например, при использовании модели SimpleImputer для заполнения пропущенных значений в наборе данных могут быть созданы новые столбцы с заполненными значениями. Также при работе с категориальными признаками, например при использовании модели LabelEncoder, могут быть созданы новые столбцы с кодированными значениями.",
            "В наборе данных отсутствующим значением считается любой пропуск информации.",
            "Прежде всего, отсутствующие значения могут стать причиной ошибки работы модели машинного обучения. Кроме того, правильная обработка отсутствующих значений может улучшить конечные результаты предсказания.",
            "На платформе SMILE для работы с отсутствующими значениями используются несколько моделей категории Imputer: SimpleImputer, KNNImputer и IterativeImputer.",
            "Категориальный признак в наборе данных - это любое значение, которое не определяется числом.",
            "Категориальные признаки являются неотъемлемой частью информации, необходимой для решения прикладных задач. Большинство алгоритмов машинного обучения не могут работать с категориальными данными. Кодирование категориальных признаков числами позволяет модели не только правильно воспринимать данные, но и обучаться на них.",
            "На платформе SMILE для работы с категориальными признаками используются модели категории Encoder: LabelEncoder, OneHotEncoder и OrdinalEncoder.",
            "Выбросы - это те данные, которые значительно выбиваются из общего распределения выборки.",
            "Выбросы можно обнаружить и обработать на платформе SMILE с помощью категории моделей \"OutlierModel\", которая включает в себя такие модели, как LocalOutlierFactor, EllipticEnvelope, OneClassSVM, IsolationForest.",
            "На платформе SMILE для работы с выбросами используется категория моделей \"OutlierModel\", которая включает в себя: LocalOutlierFactor, EllipticEnvelope, OneClassSVM, IsolationForest",
            "Масштабирование выборки данных - это приведение значений различных признаков к одному порядку.",
            "На платформе SMILE для масштабирования выборки используются модели категории Scaler: MinMaxScaler, MaxAbsScaler, RobustScaler, StandardScaler, Normalizer.",
            "Пользователь может совершать операции с набором данных на платформе SMILE, используя модели из категории DataFrameOperations.",
            "Наиболее популярные модели категории DataFrameOperations, доступные на платформе SMILE, это: DataFrameDropDuplicates - позволяет удалить дублирующиеся значения; DataFrameMath - позволяет совершать математические операции с помощью расширенных настроек узла модели; DataFrameRename - позволяет переименовать столбцы датасета; DataFrameReplace - позволяет заменять отсутствующие значения.",
            "Модель DataFrameDropDuplicates на платформе SMILE позволяет удалить дублирующиеся значения в наборе данных.",
            "Модель DataFrameMath на платформе SMILE позволяет выполнять различные математические операции с данными.",
            "Модель DataFrameRename в узле моделей на платформе SMILE позволяет переименовать столбцы в наборе данных.",
            "Модель DataFrameReplace на платформе SMILE позволяет заменять отсутствующие значения в наборе данных.",
            "Модель LabelEncoder заменяет каждый уникальный категориальный признак числом на платформе SMILE.",
            "В OneHotEncoder для каждого уникального значения категориального признака создаются столбцы, в которых отмечается наличие или отсутствие признака. В OrdinalEncoder категориальные признаки кодируются в виде целочисленного массива.",
            "На платформе SMILE модели категории OutlierModel могут обрабатывать аномальные значения в данных.",
            "На платформе SMILE при использовании модели KNNImputer для заполнения отсутствующих значений можно настроить параметры KNNImputer, такие как количество соседей (n_neighbors), метод выбора соседей (metric), метод заполнения отсутствующих значений (strategy) и т.д."
        ]
    },
    "10": {
        "Context": "Раздел: Классификация и регрессия на платформе SMILE.  Классификация и регрессия представляют собой две из основных категорий задач машинного обучения. \n Регрессия - это статистический метод, для определения взаимосвязи между зависимой переменной и одной или несколькими независимыми переменными. Задача регрессионного анализа заключается в предсказании влияния независимой переменной на зависимую. Примеры задачи регрессии: предсказание цены на нефть,  предсказание доходов компании.\n Классификация - это статистический метод, который используется для определения категории новых наблюдений на основе обучающих данных. Задачей классификации является отнесение объекта наблюдения к одному из классов на основе некоторых признаков. Под классами в данном случае понимается любое конечное количество категориальных ответов. Примеры задачи классификации:распознавание кошек и собак на фотографии, определение вида ирисов.\nЛучшие практики классификации и регрессии. На платформе SMILE пользователь может легко применить модели классификации и регрессии к данным, с помощью Редактора в рабочем пространстве.Применить модель для расчетов можно только к определенному узлу \"Признаку\", то есть к данным, которые загружены в него. На графе во вкладке Редактор необходимо разместить Узел модели, которые относятся к категории классификации или регрессии.\nМодели классификации и регрессии рекомендуется использовать на данных, которые предварительно разделены на тренировочные и тестовые. Кроме разделения данных на тренировочную и тестовую выборки, может также использоваться кросс-валидация, которая позволяет применять несколько алгоритмов машинного обучения к одному узлу.\n После разделения данных на тестовую и тренировочную выборки необходимо добавить узел \"Модель\", в панели управления которым будет выбран один из алгоритмов категории \"ClassificationModel\" или \"RegressionModel\" (классификации или регрессии соответветственно в зависимости от задачи). Далее необходимо соединить с помощью ребра тренировочные данные с моделью и узел модели с тестовыми данными. После чего можно приступать к запуску узла или графа целиком. В таком случае модель сначала обучится на тренировочных данных, а затем сформирует предсказание на тестовых.\n Наиболее популярные модели классификации: LogisticRegression, RandomForestClassifier, CatBoostClassifier, XGBClassifier, RidgeClassifier\n Наиболее популярные модели регрессии: LinearRegression, Lasso, Ridge, SGDRegressor, ElasticNet\n В панели под Редактором после выполнения расчетов отображается оценка модели на тренировочных данных. Оценка модели на тренировочных данных не является показательной, рекомендуется оценивать модель по тестовым данным после обучения на тренировочных.",
        "questions_list": [
            "Какие основные задачи решает регрессионный анализ на платформе SMILE?",
            "Что такое зависимая переменная в задачах регрессии?",
            "Какие примеры задач регрессии можно решать с помощью моделей на платформе SMILE?",
            "Что представляет собой задача классификации на платформе SMILE?",
            "Что такое классы в контексте задачи классификации на платформе SMILE?",
            "Какие примеры задач классификации можно решать с помощью моделей на платформе SMILE?",
            "Какие модели категории ClassificationModel являются наиболее популярными на платформе SMILE?",
            "Какие модели категории RegressionModel рекомендуется использовать для решения задачи регрессии на платформе SMILE?",
            "Каким образом пользователь может применить модель классификации к данным в редакторе на платформе SMILE?",
            "Какие шаги необходимо выполнить для разделения данных на тренировочную и тестовую выборки перед применением модели на платформе SMILE?",
            "Что такое кросс-валидация и как она применяется в задачах машинного обучения на платформе SMILE?",
            "Как пользователь может добавить модель в узел \"Модель\" на платформе SMILE для классификационных задач?",
            "Какие данные соединяются с моделью после разделения на тренировочную и тестовую выборки на платформе SMILE?",
            "Что делает модель LogisticRegression в задачах классификации на платформе SMILE?",
            "Какие метрики используются для оценки модели после обучения на тренировочных данных на платформе SMILE?",
            "Почему оценка модели на тренировочных данных не является окончательной на платформе SMILE?",
            "Какие модели регрессии на платформе SMILE могут быть полезны для предсказания цен на финансовых рынках?",
            "Каким образом пользователь может интерпретировать результаты работы модели классификации на платформе SMILE?"
        ],
        "answers_list": [
            "Решение задач регрессии на платформе SMILE.",
            "В задачах регрессии зависимая переменная - это то, что мы хотим предсказать на основе других переменных.",
            "Примеры задач регрессии: предсказание цены на нефть,  предсказание доходов компании.",
            "Задача классификации на платформе SMILE представляет собой статистический метод, который используется для определения категории новых наблюдений на основе обучающих данных.",
            "Классы в контексте задачи классификации на платформе SMILE - это любое конечное количество категориальных ответов.",
            "Примеры задач классификации, которые можно решать с помощью моделей на платформе SMILE: распознавание кошек и собак на фотографии, определение вида ирисов.",
            "Наиболее популярные модели категории ClassificationModel на платформе SMILE: LogisticRegression, RandomForestClassifier, CatBoostClassifier, XGBClassifier, RidgeClassifier.",
            "Наиболее популярные модели регрессии: LinearRegression, Lasso, Ridge, SGDRegressor, ElasticNet",
            "Пользователь может применить модель классификации к данным в редакторе на платформе SMILE, разместив узел модели классификации на графе в рабочем пространстве и соединив его с узлом данных.",
            "Для разделения данных на тренировочную и тестовую выборку необходимо использовать модели из категории ModelSelection. Наиболее простой и интуитивно понятной моделью для разделения данных навыборки является TrainAndTest.",
            "Кросс-валидация - это метод, который используется для оценки точности модели машинного обучения на данных, которые не использовались для обучения. Он выполняется путем разделения исходных данных на несколько подмножеств, из которых одно используется для обучения модели, а другое - для проверки ее точности. Этот процесс повторяется несколько раз, используя разные подмножества данных для обучения и проверки. В SMILE кросс-валидация  позволяет применять несколько алгоритмов машинного обучения к одному узлу.",
            "Пользователь может добавить модель в узел \"Модель\" на платформе SMILE для классификационных задач, выбрав один из алгоритмов категории \"ClassificationModel\" в панели управления.",
            "На платформе SMILE после разделения данных на тренировочную и тестовую выборки, тренировочные данные соединяются с моделью.",
            "Модель LogisticRegression на платформе SMILE выполняет задачу классификации, используя логистическую регрессию. Она позволяет определить вероятность принадлежности объекта к определенной категории на основе заданных признаков.",
            "На платформе SMILE для оценки модели после обучения на тренировочных данных используются следующие метрики: - Для классификации: точность (accuracy), Precision, Recall, F1-мера, AUC-ROC. - Для регрессии: среднеквадратичная ошибка (MSE), среднеквадратичная абсолютная ошибка (MAE), коэффициент детерминации (R2), cредняя абсолютная процентная ошибка (MAPE), корень из средней квадратичной ошибки (RMSE).",
            "Оценка модели на тренировочных данных не является окончательной, потому что она может быть оптимизирована для этих данных, что не всегда соответствует реальным условиям.",
            "На платформе SMILE для предсказания цен на финансовых рынках могут быть полезны модели регрессии, такие как LinearRegression, Lasso, Ridge, SGDRegressor и ElasticNet.",
            "Пользователь может интерпретировать результаты работы модели классификации на платформе SMILE, используя различные методы и инструменты. Например, можно использовать графики и диаграммы, чтобы проанализировать распределение классов и их взаимосвязи. Также можно использовать методы машинного обучения, такие как деревья решений или случайный лес, чтобы определить, какие признаки наиболее важны для классификации. Кроме того, можно использовать методы анализа ошибок, чтобы определить, какие классы имеют высокую ошибку классификации, и какие факторы могут повлиять на точность модели."
        ]
    },
    "11": {
        "Context": "Раздел: оценка моделей. Оценка моделей классификации и регрессии. Модели классификации и регрессии могут оцениваться по конкретным числовым показателям. Расчет данных метрик на платформе SMILE происходит автоматически при применении соответствующей модели. \nНаиболее распространенные метрики для оценки моделей классификации: Accuracy - показывает долю объектов, для которых верно определен класс в общем количестве объектов; Precision - точность, которая показывает долю верно определенных классов среди всех объектов, отнесенных Моделью к этому классу; Recall - полнота, которая показывает долю верно определенных классов среди всех объектов; F1 - среднее гармоническое двух метрик Precision и Recall. Метрика F1 предполагает одинковый вес точности и полноты, поэтому может использоваться, как их агрегированная оценка; ROC AUC - кривая рабочих характеристик, которая используется для анализа поведения классификаторов при различных пороговых значениях.\nНаиболее распространенные метрики для оценки моделей регрессии: MSE - средняя квадратичная ошибка, применяется в ситуациях, когда необходимо подчеркнуть большие ошибки и выбрать модель, которая дает меньше больших ошибок прогноза. MAE - средняя абсолютная ошибка. R2 - коэффициент детерминации. MAPE - cредняя абсолютная процентная ошибка. RMSE - корень из средней квадратичной ошибки.\n Для оценки результатов моделей классификации и регрессии на платформе SMILE существуют соответствующие Модели, которые относятся к категории Scorer. Для оценки результатов модели на тестовых данных необходимо добавить новый узел \"Модель\" и выбрать classificationScorer или regressionScorer в зависимости от той задачи, которая решалась. Далее необходимо соединить ребром узел \"Признак\", который содержит тестовые данные и добавленный узел оценивания. После запуска узла категории Scorer в модальном окне будет отображаться оценка персдказанных данных на основе тестовой выборки. Оценка модели при дальнейшем исследовании может использоваться для подбора гиперпараметров или изменения алгоритма машинного обучения.",
        "questions_list": [
            "Что такое метрики оценки моделей и зачем они используются в задачах классификации и регрессии на платформе SMILE?",
            "Какие основные числовые метрики используются для оценки моделей классификации на платформе SMILE?",
            "Что показывает метрика Accuracy при оценке моделей классификации на платформе SMILE?",
            "Что такое Precision и как она интерпретируется в контексте моделей классификации на платформе SMILE?",
            "Какая роль у метрики Recall в оценке качества моделей классификации на платформе SMILE?",
            "Что представляет собой метрика F1 и почему она полезна при оценке моделей классификации на платформе SMILE?",
            "Что такое ROC AUC и как она помогает в анализе результатов моделей классификации на платформе SMILE?",
            "Какие основные числовые метрики используются для оценки моделей регрессии на платформе SMILE?",
            "Как интерпретируется метрика MSE при оценке моделей регрессии на платформе SMILE?",
            "Что показывает метрика MAE и как она помогает в оценке качества моделей регрессии на платформе SMILE?",
            "Что представляет собой коэффициент детерминации R2 и как он используется при оценке моделей регрессии на платформе SMILE?",
            "Какая роль у метрики MAPE в оценке моделей регрессии на платформе SMILE?",
            "Что представляет собой RMSE и в чем его преимущества при оценке моделей регрессии на платформе SMILE?",
            "Как пользователь может оценить результаты модели классификации на тестовых данных на платформе SMILE?",
            "Какие шаги необходимо выполнить для добавления узла оценки модели классификации в рабочем пространстве на платформе SMILE?",
            "Какие модели категории Scorer доступны для оценки результатов моделей регрессии на платформе SMILE?",
            "Что делать после получения оценки модели на тестовых данных на платформе SMILE для улучшения качества предсказаний?",
            "Какие преимущества предоставляет пользователю модальное окно с оценкой модели на платформе SMILE?",
            "Какие рекомендации можно дать пользователю для выбора метрики оценки модели в зависимости от конкретной задачи на платформе SMILE?"
        ],
        "answers_list": [
            "Метрики используются для оценки качества моделей и сравнения различных алгоритмов обучения.",
            "На платформе SMILE для оценки моделей классификации используются следующие основные числовые метрики: точность (accuracy), точность (precision), полнота (recall), F1-мера и ROC AUC.",
            "метрика Accuracy показывает долю объектов, для которых верно определен класс в общем количестве объектов.",
            "Precision - это метрика, которая оценивает точность модели классификации на платформе SMILE. Она показывает долю верно определенных классов среди всех объектов, отнесенных моделью к этому классу.",
            "Метрика Recall используется для оценки качества моделей классификации на платформе SMILE, поскольку она показывает долю верно определенных классов среди всех объектов.",
            "Метрика F1 является мерой качества классификации, которая учитывает как точность, так и полноту. Она используется для оценки моделей классификации на платформе SMILE, поскольку позволяет учитывать обе стороны - как количество ложных срабатываний, так и количество истинных срабатываний.",
            "ROC AUC - это кривая рабочих характеристик, которая используется для анализа поведения классификаторов при различных пороговых значениях. Она помогает оценить точность модели и выбрать оптимальный порог для классификации на платформе SMILE.",
            "На платформе SMILE для оценки моделей регрессии используются следующие основные числовые метрики: MSE, MAE, R2, MAPE и RMSE.",
            "Метрика MSE (Mean Squared Error) - средняя квадратичная ошибка - интерпретируется как показатель среднего квадрата ошибок прогноза модели регрессии по сравнению с фактическими значениями.",
            "Метрика MAE (средняя абсолютная ошибка) показывает среднее значение абсолютных ошибок, сделанных моделью при прогнозировании значений. Она помогает оценить, насколько точной является модель в предсказании численных значений и помогает выбрать наиболее подходящую модель для задачи регрессии на платформе SMILE.",
            "Коеффициент детерминации R2 - это показатель, который используется для оценки того, насколько хорошо модель регрессии описывает данные. Он рассчитывается как сумма квадратов отклонений от прогнозируемого значения от фактического значения, деленная на сумму квадратов отклонений от среднего значения от фактического значения. R2 может принимать значения от 0 до 1, где 1 означает, что модель идеально описывает данные, а 0 означает, что модель не описывает данные.",
            "Метрика средней абсолютной процентной ошибки (MAPE) используется для оценки моделей регрессии на платформе SMILE.",
            "RMSE - корень из средней квадратичной ошибки - это метрика, которая используется для оценки точности моделей регрессии. Она позволяет определить среднюю величину ошибки, которую делает модель при предсказании значений целевой переменной. RMSE имеет преимущество перед другими метриками, такими как MSE, в том, что оно измеряет ошибку в относительных единицах, что позволяет сравнивать результаты моделей, работающих с различными шкалами данных. RMSE также является более интуитивно понятной и удобной для использования, чем другие метрики, такие как MAE или MAPE.",
            "Пользователь может оценить результаты модели классификации на тестовых данных на платформе SMILE, используя соответствующие модели Scorer. Для этого необходимо добавить новый узел \"Модель\" и выбрать ClassificationScorer. Далее необходимо соединить ребром узел \"Признак\", который содержит тестовые данные и добавленный узел оценивания. После запуска узла категории Scorer в модальном окне будет отображаться оценка персдказанных данных на основе тестовой выборки.",
            "Для добавления узла оценки модели классификации в рабочем пространстве на платформе SMILE необходимо выполнить следующие шаги: добавить в рабочее пространство новый узел Модели, выбрать ClassificationScorer в качестве модели, а затем направить на узел модели ClassificationScorer ребро от узла тестовых данных, к которым ранее была применена модель классификации.",
            "На платформе SMILE для оценки результатов моделей регрессии доступна модель RegressionScorer.",
            "Основными методами улучшения качества предсказаний после получения оценки модели на тестовых данных на платформе SMILE являются оптимизация гиперпараметров при помощи моделей категории IterationsTool или изменение алгоритма машинного обучения.",
            "Модальное окно с оценкой модели на платформе SMILE позволяет пользователю получить быстрый и удобный доступ к информации о качестве модели. Это позволяет пользователю быстро оценить качество модели и принять решение о ее использовании или необходимости ее доработки.",
            "Для выбора метрики оценки модели на платформе SMILE необходимо определить, является ли задача классификацией или регрессией, и выбрать соответствующую метрику. Для классификации можно использовать Accuracy, Precision, Recall, F1 или ROC AUC, в зависимости от целей и требований. Для регрессии можно использовать MSE, MAE, R2, MAPE или RMSE. Важно также учитывать, что выбор метрики зависит от конкретной задачи и данных, и может потребоваться экспериментирование с различными метриками для выбора наиболее подходящей."
        ]
    },
    "12": {
        "Context": "Раздел: AutoML решения. AutoML решения. AutoML (автоматизированное машинное обучение) представляет собой инструмент для упрощения работы исследователя. AutoML решения позволяют построить пайплайн (последовательный набор алгоритмов для решения задачи) на основе некоторых данных, в частности после их предварительной обработки.\nAutoML решения могут быть использованы для задач классификации и регресии. После предобработки данных на граф Редактора необходимо добавить узел \"Модель\" и выбрать один из алгоритмов в категории AutoML. После добавления на граф алгоритма AutoML необходимо направить ребро от тренировочных данных к узлу модели и соединить сам алгоритм с тестовыми данными с помощью ребра. Для оценки модели на тестовой выборке рекомендуется заранее добавить связь узла модель оценки с тестовыми данным. Далее в расширенных настройках узла \"Модели\" необходимо выбрать целевой столбец (target_column) и задачу (problem) поставленную для решения (классификация или регрессия).\nПрименять алгоритмы AutoML для решения задач классификации и регрессии также рекомендуется после разбиения данных на тренировочную и тестовую подвыборки.\nAutoML решение FedotModel обладает помимо основных двумя дополнительными параметрами: Metric - выбор метрики, на которую будет ориентироваться модель при подборе алгоритмов машинного обучения; Timeout - ограничение времени расчета FEDOT в минутах. Для AutoML решений TpotModel и AutoKeras также присутствую другие дополнительные параметры модели, которые представляют собой гиперпараметры.\nПосле выбора расширенных настроек для необходимо запустить граф или узел с моделью AutoML (в случае, если все предшествующие узлы были рассчитаны). После расчета узла AutoML граф в Редакторе будет видоизменен и будут отображаться узлы, которые модель использовала для решения данной задачи. Использованные алгоритмы будут отображаться в виде новых узлов фиолетового цвета.Аналогично моделям классификации и регрессии в узлах \"Модели\" будет отображаться оценка на тренировочных данных, а в примененном заранее узле Scorer будет отображаться оценка модели на тестовых данных.Важно: при нажатии кнопки \"Перезагрузить граф\" узел с AutoML моделью будет автоматически преобразован обратно.",
        "questions_list": [
            "Что представляет собой AutoML решение на платформе SMILE и для чего оно используется?",
            "Какие задачи машинного обучения можно решать с помощью AutoML на платформе SMILE?",
            "Какие основные шаги необходимо выполнить для построения пайплайна с использованием AutoML на платформе SMILE?",
            "Какие алгоритмы машинного обучения доступны в категории AutoML на платформе SMILE?",
            "Что нужно сделать после добавления алгоритма AutoML на граф в Редакторе на платформе SMILE?",
            "Какие параметры модели можно настроить в расширенных настройках узла \"Модель\" при использовании AutoML на платформе SMILE?",
            "Как выбрать метрику для оценки модели в параметрах AutoML решения на платформе SMILE?",
            "Как установить ограничение времени расчета (Timeout) для модели FEDOT в AutoML на платформе SMILE?",
            "Какие дополнительные параметры имеют модели TpotModel и AutoKeras в AutoML на платформе SMILE?",
            "Почему важно разделять данные на тренировочную и тестовую выборки перед применением AutoML на платформе SMILE?",
            "Какие шаги необходимо предпринять для оценки модели на тестовой выборке после использования AutoML на платформе SMILE?",
            "Какие преимущества предоставляет пользователю возможность запуска узла с AutoML моделью на платформе SMILE?",
            "Какие результаты отображаются в Редакторе после расчета узла с моделью AutoML на платформе SMILE?",
            "Что представляют собой новые узлы фиолетового цвета, которые появляются в графе после использования AutoML на платформе SMILE?",
            "Какие информационные панели доступны пользователю после применения AutoML модели на платформе SMILE?",
            "Какие действия необходимо выполнить после нажатия кнопки \"Перезагрузить граф\" при использовании узла с AutoML моделью на платформе SMILE?",
            "Какие типичные задачи можно решить с помощью AutoML решений на платформе SMILE?",
            "Какие преимущества AutoML решений на платформе SMILE относительно ручной настройки моделей машинного обучения?"
        ],
        "answers_list": [
            "Автоматическое машинное обучение (AutoML) представляет собой инструмент для упрощения работы исследователя. AutoML решения позволяют построить пайплайн на основе некоторых данных, в частности после их предварительной обработки.",
            "С помощью AutoML на платформе SMILE можно решать задачи классификации и регрессии.",
            "Для построения пайплайна с использованием AutoML на платформе SMILE необходимо выполнить следующие основные шаги:\n\n1.\tПредварительная обработка данных: необходимо выполнить предварительную обработку данных, включая очистку, преобразование и выбор необходимых признаков.\n\n2.\tРазбиение данных на тренировочную и тестовую выборки: необходимо разбить данные на тренировочную и тестовую выборки, чтобы оценить точность модели на незнакомых данных.\n\n3.\tВыбор алгоритма AutoML: необходимо выбрать один из алгоритмов AutoML, таких как TpotModel или FedotModel, для решения задачи классификации или регрессии.\n\n4.\tОбучение модели: необходимо обучить модель на тренировочных данных, используя выбранный алгоритм AutoML.\n\n5.\tОценка модели: необходимо оценить точность модели на тестовой выборке, чтобы определить, насколько хорошо она решает задачу.\n\n6.\tОптимизация модели: если необходимо, можно оптимизировать модель, изменяя гиперпараметры или используя другие методы.\n\n7.\tИтоговая оценка: необходимо оценить точность модели на новых данных, чтобы определить, насколько хорошо она работает в реальных условиях.",
            "На платформе SMILE в категории AutoML доступны следующие алгоритмы машинного обучения: FedotModel, TpotModel и AutoKeras.",
            "Нужно направить ребро от тренировочных данных к узлу модели и соединить сам алгоритм с тестовыми данными с помощью ребра.",
            "В расширенных настройках узла \"Модель\" при использовании AutoML на платформе SMILE можно настроить целевой столбец (target_column) и задачу (problem), которую необходимо решить (классификация или регрессия).",
            "Для выбора метрики для оценки модели в параметрах AutoML решения на платформе SMILE необходимо выбрать задачу, для которой будет использоваться модель. Затем необходимо выбрать метрику, которая соответствует задаче и целевому столбцу.",
            "Для установки ограничения времени расчета (Timeout) для модели FEDOT в AutoML на платформе SMILE необходимо указать значение параметра Timeout в минутах в расширенных настройках узла модели.",
            "Для модели TpotModel это: Metric - выбор метрики, на которую будет ориентироваться модель при подборе алгоритмов машинного обучения; Timeout - ограничение времени расчета FEDOT в минутах. Для модели AutoKeras также присутствуют другие дополнительные параметры модели, которые представляют собой гиперпараметры.",
            "Разделение данных на тренировочную и тестовую выборки является важным шагом при использовании AutoML на платформе SMILE, поскольку это позволяет оценить точность модели на данных, которые она не видела раньше. Тестовая выборка используется для оценки качества модели и выявления возможных проблем с ее работой на новых данных. Кроме того, разделение данных на тренировочную и тестовую выборки помогает избежать переобучения модели, что может привести к снижению ее точности на новых данных.",
            "Для оценки модели на тестовой выборке после использования AutoML на платформе SMILE необходимо добавить узел \"Модель оценки\" и соединить его с тестовыми данными. Далее необходимо выбрать целевой столбец и задачу в расширенных настройках узла \"Модели\".",
            "Позволяет упростить работу исследователя, построить пайплайн на основе данных, используя инструменты для автоматизации машинного обучения.",
            "В Редакторе будут отображаться узлы, которые модель использовала для решения задачи. Использованные алгоритмы будут отображаться в виде новых узлов фиолетового цвета.",
            "В этих узлах отображаются алгоритмы, которые использовались моделью для решения задачи.",
            "В SMILE доступны следующие информационные панели: * Оценка модели на тренировочных данных * Оценка модели на тестовых данных",
            "Если на платформе SMILE был использован узел с AutoML моделью, то при нажатии кнопки \"Перезагрузить граф\" он будет автоматически преобразован обратно.",
            "С помощью AutoML решений на платформе SMILE можно решить типичные задачи классификации и регрессии.",
            "AutoML (автоматизированное машинное обучение) представляет собой инструмент для упрощения работы исследователя. AutoML решения позволяют построить пайплайн (последовательный набор алгоритмов для решения задачи) на основе некоторых данных, в частности после их предварительной обработки."
        ]
    },
    "13": {
        "Context": "Раздел: модели кластеризации. Модели кластеризации на платформе SMILE. Кластеризация представляет собой задачу машинного обучения, которая схожа с классификацией, но обладает одним важным отличием. Кластеризация применяется в том случае, когда заранее неизвестна принадлежность каждого объекта исходных данных к конкретному классу. Кластеризация является задачей машинного обучения \"без учителя\", то есть которой не требуется разделение данных на тренировочную и тестовую выборки. Модели кластеризации предполагают подбор пользователем количества кластеров, на основе изучения входных данных.\nПри решении задач кластеризации для определения количества кластеров рекомендуется рассматривать график понижения размерности (методом PCA), который позволяет свести отображение большого количества разных признаков к двумерному графику. При решении задач кластеризации также рекомендуется во время предобработки данных применять алгоритмы масштабирования. \nЛучшие практики кластеризации. Наиболее популярные модели кластеризации доступные на платформе SMILE в категории \"ClusterizationModel\": Kmeans, DBSCAN, AffinityPropagation, AgglomerativeClustering, Birch. Алгоритмы кластеризации применяются в качестве нового узла \"Модели\", на которую подаются данные из узла \"Признака\" с помощью ребра.\nОценка моделей кластеризации. Распростренным вариантом оценки результатов кластеризации является привлечение специалиста в предметной области. Данный подход позволяет получить наиболее точную качественную оценку результатов кластеризации, так как основывается на экспертном мнении. В случаях, когда возможность привлечения специалиста предметной области отсутствует можно воспользоваться количественными показателями оценки моделей кластеризации. Показатели оценки моделей кластеризации: Calinski-Harabasz index, Davies-Bouldin index, Inertia, Silhouette Coefficient.",
        "questions_list": [
            "Какие основные характеристики данных следует рассматривать перед выбором модели кластеризации на платформе SMILE?",
            "В чем заключается принципиальное отличие между задачей кластеризации и классификации в контексте машинного обучения?",
            "Какие алгоритмы масштабирования данных рекомендуется использовать перед применением моделей кластеризации на платформе SMILE?",
            "Как пользователю платформы SMILE выбрать оптимальное количество кластеров для задачи кластеризации?",
            "Какие методы визуализации данных могут помочь в определении количества кластеров перед применением моделей кластеризации?",
            "В чем заключается преимущество использования метода PCA при подготовке данных для моделей кластеризации на платформе SMILE?",
            "Какие практические шаги необходимо предпринять для добавления модели кластеризации в граф Редактора на платформе SMILE?",
            "Какие критерии оценки качества моделей кластеризации доступны на платформе SMILE и как они используются?",
            "Какие аспекты важно учитывать при интерпретации результатов кластеризации на платформе SMILE?",
            "В каких случаях рекомендуется использовать экспертное мнение для оценки результатов кластеризации, а в каких — количественные показатели?"
        ],
        "answers_list": [
            "1.\tКоличество кластеров\n2.\tРазмерность данных\n3.\tТип данных\n4.\tСвойства данных",
            "Кластеризация и классификация - это две различные задачи машинного обучения, которые имеют свои особенности и отличия. Основное различие между ними заключается в том, что классификация предполагает разделение данных на известные классы, в то время как кластеризация используется для группировки данных в кластеры на основе сходства между ними, когда классы не известны заранее.",
            "Согласно документации, рекомендуется использовать алгоритмы масштабирования данных перед применением моделей кластеризации на платформе SMILE. На платформе SMILE для масштабирования выборки используются модели категории Scaler: MinMaxScaler, MaxAbsScaler, RobustScaler, StandardScaler, Normalizer.",
            "Для выбора оптимального количества кластеров для задачи кластеризации на платформе SMILE, рекомендуется использовать график понижения размерности (методом PCA) и применять алгоритмы масштабирования данных в процессе предобработки.",
            "Методы визуализации данных, которые могут помочь в определении количества кластеров перед применением моделей кластеризации, включают в себя: график понижения размерности (методом PCA), рассмотрение графика Calinski-Harabasz, рассмотрение графика Silhouette.",
            "Метод PCA позволяет свести отображение большого количества разных признаков к двумерному графику.",
            "Для добавления модели кластеризации в граф Редактора на платформе SMILE необходимо выполнить следующие практические шаги:\n\n1.\tСоздать новый узел \"Модели\" и выбрать тип модели \"Кластеризация\".\n\n2.\tВыбрать алгоритм кластеризации, например, Kmeans, DBSCAN, AffinityPropagation, AgglomerativeClustering, Birch.\n\n3.\tПодключить данные из узла \"Признака\" к новому узлу \"Модели\".\n\n4.\tНастроить параметры модели, если это необходимо.\n\n5.\tПроверить и запустить модель, чтобы получить результаты кластеризации.",
            "На платформе SMILE доступны следующие критерии оценки качества моделей кластеризации: индекс Калинского-Харабазы, индекс Дэвиса-Бouldin, инерция, коэффициент Силуэлта. Эти критерии используются для оценки качества кластеризации и выбора оптимальной модели на основе полученных результатов.",
            "Важно учитывать количество кластеров, метод кластеризации, признаки и их взаимосвязи, а также оценку качества модели.",
            "В случаях, когда возможность привлечения специалиста предметной области отсутствует можно воспользоваться количественными показателями оценки моделей кластеризации."
        ]
    },
    "14": {
        "Context": "Раздел: Baseline вручную. Советы по построению Baseline вручную. Baseline можно разделить на несколько основных этапов: 1. Обработка данных (Предварительная подготовка, очистка, заполнение данных). 2. Разделение данных (Разделение данных на тренировочную (обучающую) тестовую выборку). 3. Обучение модели. 4. Оценка качества обучения модели. Отдельным этапом построения Baseline является оптимизация гиперпараметров каждой из моделей для получения наилучшего результата.\nРучное построение Baseline на платформе SMILE. Разделение данных на тренировочную и тестовую выборки. Платформа SMILE поддерживает разделение данных на обучающую и тестовую выборки с помощью узлов \"Модели\" категории ModelSelection. Рассмотрим на примере простого разделения алгоритмом TrainAndTest. Данная модель имеет следующие параметры для настройки: 1. Target_column - целевой параметр (столбец) 2. Test_Size - доля тестовой выборки (рекомендуется 20-30%) 3. Train_size - доля тренировочной выборки (рекомендуется 70-80%) 4. Random_state - распределение строк исходного датасета на тестовую и тренировочную выборку случайным образом (встроенный генератор) 5. Shuffle - перемешивание строк в исходном наборе данных.\nРазделение данных на тренировочную и тестовую выборки. После применения к входным данным модели TrainAndTest необходимо добавить два узла \"Признак\" и направить к ним ребра от узла модели. В соответствующих узлах данных нужно выбрать тренировочные данные (признаки с пометкой train) и тестовые (признаки с пометкой test). В списке признаков можно использовать заголовки с названием узла \"TrainAndTest\" и с соответствующими пометками [Train] или [Test] для выбора сразу всех признаков из тренировочной или тестовой выборок.\nКросс-валидация на платформе SMILE. Кросс-валидация - метод разбиения исходного набора данных на подвыборки, в рамках которых модель обучается на большей части данных (условно тренировочной выборке), предсказывает значения для меньшей части данных (условно тестовой выборке) и затем сравнивает предсказанные с реальными. Кросс-валидация на платформе SMILE реализована в качестве отдельной модели, которая включает в себя не только разделение выборки на несколько \"слоев\", но и оценку алгоритмов машинного обучения.\nКросс-валидация на платформе SMILE. Для применения кросс-валидации в Редакторе необходимо добавить на граф новый узел \"Модель\" и выбрать в категории Iterations Tool модель CrossValScorer. Затем необходимо с помощью ребра соединить узел с данными и узел модели кросс-валидации. При использовании кросс-валидации разделять выборку на тренировочную и тестовую необязательно. Далее на граф добавляются узлы \"Моделей\", которые будут использоваться для решения задачи, после чего каждый узел с помощью ребра соединяется с узлом кросс-валидации. К одному узлу кросс-валидации может быть применено одновременно несколько алгоритмов машинного обучения.\n\"Кросс-валидация на платформе SMILE. После построения графа необходимо настроить параметры кросс-валидации: Целевой столбец - выбирается из столбцов, которые находятся в узле данных; Название предсказанного столбца - задается пользователем вручную\nОценка - выбор метрик оценки моделей; CV (количество разделений) - задается пользователем вручную. Далее при нажатии кнопки \"\"Рассчитать\"\" в узле кросс-валидации в панели под Редактором появится таблица с заранее выбранными метриками оценки для алгоритмов, которые применены к узлу кросс-валидации.\"\nНастройка гиперпараметров модели на платформе SMILE. Важной частью машинного обучения является настройка гиперпараметров модели, которая позволяет получить более качественное предсказание. Настройка гиперпараметров модели может осуществляться вручную через расширенные настройки узла в Редакторе или автоматически с помощью инструментов на платформе SMILE.\nНастройка гиперпараметров модели на платформе SMILE. Для автоматического подбора гиперпараметров необходимо добавить на графе новый узел \"Модели\" из категории Iterations Tool: GridSearchCV, RandomizedSearchCV, BayesSearchCV. После добавления узла автоподбора гиперпараметров необходимо с помощью ребра передать на него данные исследуемого признака и добавить ребро от модели, которую нужно настроить.\nНастройка гиперпараметров модели на платформе SMILE. После соединения узла модели с узлом подбора гиперпараметров в расширенных настройках последнего появится возможность задавать значения или интервалы для каждого отдельного гиперпараметра алгоритма машинного обучения. В расширенных настройках узла \"Модели\" будут отображаться одновременно и параметры алгоритма автоподбора и параметра алгоритма машинного обучения. Отличительной чертой данных параметров будет название алгоритма оптимизации гиперпараметров (помещенное в квадратные скобки) в начале названия параметра.",
        "questions_list": [
            "Какие этапы включает в себя построение Baseline модели вручную на платформе SMILE?",
            "Какие алгоритмы разделения данных на обучающую и тестовую выборки доступны в категории ModelSelection на платформе SMILE?",
            "Какие параметры необходимо настроить при использовании модели TrainAndTest для разделения данных на обучающую и тестовую выборки?",
            "В чем заключается роль параметра Test_Size при использовании модели TrainAndTest на платформе SMILE?",
            "Какие дополнительные параметры помогают улучшить качество разделения данных при использовании модели TrainAndTest?",
            "В чем заключается основное преимущество использования кросс-валидации при построении Baseline модели на платформе SMILE?",
            "Какой инструмент в категории Iterations Tool необходимо выбрать для применения кросс-валидации на платформе SMILE?",
            "Какие параметры необходимо настроить в узле CrossValScorer перед применением кросс-валидации?",
            "Какие метрики оценки моделей доступны в узле CrossValScorer на платформе SMILE?",
            "Какие преимущества дает использование автоматической настройки гиперпараметров модели на платформе SMILE?",
            "Какие методы автоматической настройки гиперпараметров доступны в категории Iterations Tool на платформе SMILE?",
            "Какие параметры необходимо настроить в узле GridSearchCV для проведения поиска по сетке гиперпараметров модели?",
            "Как использовать узел RandomizedSearchCV для эффективного поиска гиперпараметров модели на платформе SMILE?",
            "Какие основные этапы включает в себя процесс настройки гиперпараметров модели вручную на платформе SMILE?",
            "Какие преимущества дает использование узла BayesSearchCV при настройке гиперпараметров модели на платформе SMILE?",
            "Какие основные метрики качества модели рассматриваются при настройке гиперпараметров на платформе SMILE?",
            "Какие функции включают в себя модели кросс-валидации на платформе SMILE?",
            "Какие рекомендации по выбору значений или интервалов для гиперпараметров можно дать при настройке модели на платформе SMILE?",
            "Каким образом на платформе SMILE можно визуализировать процесс разделения данных при построении Baseline модели?",
            "Какие основные шаги необходимо предпринять после выбора оптимальных гиперпараметров для модели на платформе SMILE?",
            "В чем основное отличие между тренировочными и тестовыми данными при построении модели на платформе SMILE?",
            "Какие возможные проблемы могут возникнуть при использовании автоматической настройки гиперпараметров модели на платформе SMILE?",
            "Какие факторы следует учитывать при выборе метрик оценки качества моделей на платформе SMILE?",
            "Какие возможности предоставляет платформа SMILE для анализа и интерпретации результатов построенной модели?"
        ],
        "answers_list": [
            "1. Обработка данных (Предварительная подготовка, очистка, заполнение данных). 2. Разделение данных (Разделение данных на тренировочную (обучающую) тестовую выборку). 3. Обучение модели. 4. Оценка качества обучения модели. 5. Оптимизация гиперпараметров модели.",
            "На платформе SMILE в категории ModelSelection доступны следующие алгоритмы разделения данных на обучающую и тестовую выборки: TrainAndTest, CrossValScorer.",
            "1. Target_column - целевой параметр (столбец) 2. Test_Size - доля тестовой выборки (рекомендуется 20-30%) 3. Train_size - доля тренировочной выборки (рекомендуется 70-80%) 4. Random_state - распределение строк исходного датасета на тестовую и тренировочную выборку случайным образом (встроенный генератор) 5. Shuffle - перемешивание строк в исходном наборе данных.",
            "Параметр Test_Size определяет долю тестовой выборки при разделении данных на обучающую и тестовую выборки с помощью модели TrainAndTest на платформе SMILE.",
            "1. Target_column - целевой параметр (столбец) 2. Test_Size - доля тестовой выборки (рекомендуется 20-30%) 3. Train_size - доля тренировочной выборки (рекомендуется 70-80%) 4. Random_state - распределение строк исходного датасета на тестовую и тренировочную выборку случайным образом (встроенный генератор) 5. Shuffle - перемешивание строк в исходном наборе данных.",
            "Кросс-валидация позволяет оценить точность модели на данных, которые она не видела раньше, что позволяет избежать переобучения и получить более точные результаты.",
            "Для применения кросс-валидации на платформе SMILE необходимо выбрать модель CrossValScorer в категории Iterations Tool.",
            "1. Целевой столбец - выбирается из столбцов, которые находятся в узле данных; 2. Название предсказанного столбца - задается пользователем вручную; 3. Оценка - выбор метрик оценки моделей; 4. CV (количество разделений) - задается пользователем вручную.",
            "В узле CrossValScorer доступны следующие метрики оценки моделей: MAE, MSE, RMSE, R2, MAPE, F1, AUC, ROC_AUC, Accuracy, Precision, Recall, F1-score, LogLoss, MASE, SMAPE",
            "Изменение гиперпараметров модели может быть сложным и требовать много времени и усилий. Использование автоматической настройки гиперпараметров модели на платформе SMILE позволяет оптимизировать модель с помощью различных методов, таких как сетка поиска, случайный поиск и поиск Байеса. Это позволяет получить наилучшие результаты с минимальными усилиями.",
            "На платформе SMILE в категории Iterations Tool доступны следующие методы автоматической настройки гиперпараметров: GridSearchCV, RandomizedSearchCV, BayesSearchCV.",
            "В узле GridSearchCV необходимо настроить параметры поиска по сетке гиперпараметров модели. Это включает в себя выбор метода оптимизации, размер сетки гиперпараметров, диапазон значений гиперпараметров и количество повторений поиска.",
            "Для эффективного поиска гиперпараметров модели на платформе SMILE можно использовать узел RandomizedSearchCV. Он позволяет случайным образом выбирать значения гиперпараметров и оценивать их на тестовой выборке. Это позволяет найти оптимальные значения гиперпараметров для модели.",
            "1.\tРазделение данных на тренировочную и тестовую выборки. 2.\tОбучение модели. 3.\tОценка качества обучения модели. 4.\tОптимизация гиперпараметров модели.",
            "Более точное настройка гиперпараметров модели, чем при использовании других методов подбора гиперпараметров.",
            "На платформе SMILE при настройке гиперпараметров модели используются следующие основные метрики качества модели: точность, F1-мера, ROC-AUC, MAE, MSE, RMSE.",
            "Модели кросс-валидации на платформе SMILE включают в себя функции разделения исходного набора данных на подвыборки, обучения модели на большей части данных, предсказания значений для меньшей части данных и сравнения предсказанных с реальными значениями.",
            "1.\tИспользуйте метод кросс-валидации для оценки качества модели на разных значениях гиперпараметров.\n2.\tИспользуйте методы оптимизации гиперпараметров, такие как GridSearchCV, RandomizedSearchCV или BayesSearchCV, чтобы найти оптимальные значения гиперпараметров.\n3.\tИспользуйте методы автоматического подбора гиперпараметров, чтобы найти оптимальные значения гиперпараметров.\n4.\tИспользуйте методы машинного обучения, которые не требуют настройки гиперпараметров, чтобы избежать ошибок в настройке гиперпараметров.",
            "На платформе SMILE можно визуализировать процесс разделения данных при построении Baseline модели с помощью узлов \"Модели\" категории ModelSelection.",
            "1.\tСохранить модель с оптимальными гиперпараметрами в качестве нового узла на графе. 2.\tСоединить узел с данными и выбрать целевой столбец. 3.\tПроверить результаты на тестовой выборке.",
            "Тренировочные данные используются для обучения модели, а тестовые данные используются для оценки её качества.",
            "Возможные проблемы при использовании автоматической настройки гиперпараметров модели на платформе SMILE могут включать в себя: 1.\tНедостаточная точность модели. 2.\tДлинное время обучения. 3.\tНедостаточная стабильность модели. 4.\tНедостаточная гибкость модели. 5.\tНедостаточная универсальность модели.",
            "Платформа SMILE предлагает несколько инструментов для анализа и интерпретации результатов построенной модели. Это включает в себя визуализацию модели, анализ точности предсказаний, анализ влияния признаков и анализ ошибок."
        ]
    },
    "15": {
        "Context": "Раздел: автоматизированное построение Baseline. Автоматизированное построение Baseline. На платформе SMILE есть функция автоматического построения Baseline, которая позволяет решать задачи классификации и регрессии. На основе данных платформа SMILE предлагает набор узлов \"Моделей\" и связей между ними для размещения на графе Редактора. Для того, чтобы запустить автоматизированное построение Baseline необходимо предварительно загрузить данные в проект.\nПостроение Baseline не включает в себя предварительную обработку данных, поэтому рекомендуется пользоваться данной функцией после полной подготовки данных. \nПосле размещения на графе подготовленных данных в узле признак, для построения \"Baseline\" пользователь должен нажать на соответствующую кнопку в правом верхнем углу Редактора. После этого откроется модальное окно для настройки следующих параметров решаемой задачи: 1. Задача машинного обучения (Классификация, Регрессия, Классификация изображений, Суррогатное моделирование, Классификация временных рядов); 2. Целевой столбец.\nПосле выбора параметров необходимо нажать на кнопку \"Повторить попытку\", после чего платформа SMILE проанализирует данные и предложит baseline для решения выбранной задачи.Предложенный baseline будет представлен в виде набора узлов с чекбоксами, для выборочного отключения каждого из этих алгоритмов. После выбора списка необходимых узлов нужно нажать на кнопку \"Построить baseline\" и на графе в модальном окне добавятся выбранные пользователем узлы. Для того, чтобы перенести их в модуль, нужно нажать кнопку \"Применить\".",
        "questions_list": [
            "Какие задачи машинного обучения поддерживает функция автоматического построения Baseline на платформе SMILE?",
            "В чем заключается основное преимущество автоматизированного построения Baseline на платформе SMILE?",
            "Какие параметры задачи машинного обучения можно настроить перед запуском автоматизированного построения Baseline?",
            "Как пользователю загрузить данные в проект для использования функции автоматического построения Baseline?",
            "Какие шаги необходимо выполнить после размещения данных на графе для начала построения Baseline на платформе SMILE?",
            "Какие действия требуются после анализа данных для дальнейшего улучшения предложенного Baseline?",
            "Как пользователь может настроить выбор целевого столбца перед автоматическим построением Baseline?",
            "Каким образом пользователь может адаптировать предложенный Baseline под свои специфические требования?",
            "Какие возможности предоставляет функция чекбоксов для выборочного отключения алгоритмов в предложенном Baseline?",
            "Как происходит добавление выбранных узлов Baseline на графе в модуль на платформе SMILE?"
        ],
        "answers_list": [
            "Функция автоматического построения Baseline на платформе SMILE поддерживает следующие задачи машинного обучения: классификацию, регрессию, классификацию изображений, суррогатное моделирование и классификацию временных рядов.",
            "На платформе SMILE есть функция автоматического построения Baseline, которая позволяет решать задачи классификации и регрессии.",
            "1. Задача машинного обучения (Классификация, Регрессия, Классификация изображений, Суррогатное моделирование, Классификация временных рядов); 2. Целевой столбец.",
            "Для загрузки данных в проект необходимо использовать соответствующий интерфейс.",
            "Для начала необходимо выбрать задачу машинного обучения и целевой столбец. После этого необходимо нажать на кнопку \"Повторить попытку\", чтобы платформа SMILE проанализировала данные и предложила baseline для решения выбранной задачи.",
            "Для дальнейшего улучшения предложенного Baseline необходимо выбрать список необходимых узлов и нажать на кнопку \"Построить baseline\". После этого на графе в модальном окне добавятся выбранные пользователем узлы. Для того, чтобы перенести их в модуль, нужно нажать кнопку \"Применить\".",
            "Пользователь должен выбрать целевой столбец в модальном окне настройки параметров задачи.",
            "Пользователь может адаптировать предложенный Baseline под свои специфические требования, выбрав необходимые узлы и отключив ненужные.",
            "Функция чекбоксов позволяет выбрать необходимые узлы и отключить ненужные.",
            "Для добавления выбранных узлов Baseline на графе в модуль на платформе SMILE необходимо выбрать необходимые узлы в модальном окне, нажать кнопку \"Применить\" и перенести их на граф."
        ]
    },
    "16": {
        "Context": "Раздел: работа с моделями машинного обучения.  Я покажу, что у нас есть за модели, где на них смотреть, как их использовать, ну и какие-то общие факты про них. Допустим, у нас есть данные, и мы с ними хотим что-то сделать. Чтобы что-то сделать с данными, нам необходима какая-то модель. Мы добавляем новый узел модели на поверхность, в workflow, дальше мы нажимаем и вот здесь нам пишет Модель не выбрана. Это логично, модель нужно выбрать. Выбрать её можно, используя популярные модели. Можно здесь выбрать конкретную модель, которая нам нравится, щёлкнув по ней левой кнопкой мышки. Как только мы выбрали модель, она становится сразу зелёной и у нас отображаются свойства этой модели. Также модель можно выбрать через Select, но он чуть-чуть пострашнее, потому что здесь отображены все модели, которые у нас есть в платформе, а их чуть больше 250 штук. Поэтому просто так искать неприятно и смотреть здесь тоже неприятно. Здесь, если вы знаете название, лучше выполнять поиск. Например, мы ищем энкодер, и здесь все энкодеры есть. Или мы хотим, например, итер, опять-таки в инпуте есть и мы можем выбрать любой из них. Выбираем, все параметры отображаются, можно уже с ними работать и тд. Сама модель по себе не будет работать. Чтобы она заработала, необходимо добавить данные к этой модели, входные данные, с помощью ориентированного ребра. То есть есть модель, у неё есть вход и у неё есть выход. Как формируется выход: мы передаем набор признаков, бывает набор, когда признаков 30, 40, 50, 100 и мы всячески пытались сделать так, чтобы вам было максимально удобно. Для этого в модели в параметрах, например, здесь столбцы, которые нужно кодировать. И есть автовыбор, то есть он выбирает по-умолчанию все признаки, у которых тип object ну или категории, и на выход, если мы создаём выходное ребро и откроем это ребро, чтобы посмотреть, мы видим, что платформа, опять-таки заботясь о каждом пользователе, выбирает тот столбец, который она даёт на выход. Вот здесь она добавила постфикс transform и исключила исходный столбец, чтобы не было дубляжа. Если Вам необходимо, вы можете его также выбрать, то есть выбрать всегда сложнее, чем найти. Всё поэтому, что платформа максимально о вас заботится, если вам не нужна забота, то нужно ручками выбирать. Ну и на выходе мы можем посмотреть, что это действительно так. Давайте ещё исходный выберем, что это действительно так. Если мы отобразим данные, то получим ошибку, что нужно модель сначала запустить, всё правильно. Поэтому мы сначала запускаем модель, ждём, пока она посчитает, она посчитала, запустила дочерний узел, мы смотрим на данные и видим, что, действительно, есть вот такая. Давайте как-нибудь отсортируйте. И если другое слово, то значение здесь отличается вот таким образом можно выбирать модель, использовать модель запускать модель и получать результаты этой модели. Можно скачать какую-нибудь модель регрессии, она придёт в виде уведомления, можно будет также нажать на кнопочку и вам скинет бинарник. А как же смотреть модели. У нас есть отдельная страничка модели и вот здесь можно почитать о моделях более подробно. Также я отмечу, что все модели, которые у нас есть, брались с оригинальным названием. Ну может быть, максимум, мы добавляли слово МО в конце, и параметры все парсятся из документации. То есть мы некоторые параметры прорабатывать документации и почитать сейчас. Давайте попробуем это сделать. А сверху, чтобы было проще, можно посмотреть группу моделей. Ну и отфильтровать по группе. Например, я хочу посмотреть, какие у нас есть в платформе модели классификации: и вот здесь я вижу большой-большой список моделей, которые у нас есть. А давайте начнём с какой-нибудь вот такой модели. Мы копируем эту модель, открываем поиск, который вы больше всего предпочитаете и нажимаем Enter. И вот первая ссылка нам говорит, что эта модель, мы можем на неё нажать и можем подробно изучить, что есть за параметры, у нас тоже, конечно, вся эта инфа есть, но здесь можно уже с деталями, так как это документация, тут есть какие-то примеры, это использовать можно тоже в более удобном виде. Ну и в более расширенном виде. Опять-таки, если интересно, есть, например, группы моделей. Например, здесь нет ни описания и названия не совпадают, про это будут отдельные видео, описания будут добавляться. Но все эти модели, которые не ихние не говорит, они есть в руководстве и можно там про них прочитать, найти. Вот уже точно могу сказать, что есть dataframe rename, dataframe math ну и прочие все операции с дата фреймами, параметры каждого описаны подробно, есть примеры, как мы вводим, какие значения для параметров мы вводим, что на выходе получаем.",
        "questions_list": [
            "Какие действия необходимо предпринять, чтобы выбрать модель для работы в workflow на платформе?",
            "Что происходит, когда пользователь добавляет новый узел модели на поверхность workflow, но модель не выбрана?",
            "Каким образом можно выбрать конкретную модель на платформе SMILE, используя популярные модели?",
            "Как пользователь может узнать о всех доступных моделях на платформе, если их количество превышает 250?",
            "Какие основные параметры модели отображаются после её выбора на платформе SMILE?",
            "Что необходимо сделать, чтобы модель начала работать на платформе после её выбора?",
            "Как происходит передача входных данных модели через ориентированное ребро на платформе SMILE?",
            "Какие параметры модели можно настроить, например, в параметрах столбцов для кодирования на платформе SMILE?",
            "Где пользователь может найти более детальное описание и документацию по выбранной модели на платформе?"
        ],
        "answers_list": [
            "1.\tДобавить новый узел модели на поверхность workflow.\n2.\tНажать на кнопку \"Выбрать модель\".\n3.\tВыбрать модель из списка популярных моделей или использовать \"Select\" для выбора модели из всех доступных моделей в платформе.",
            "Пользователь получает сообщение \"Модель не выбрана\", поскольку необходимо выбрать модель, чтобы продолжить работу.",
            "С помощью популярных моделей можно выбрать конкретную модель, щёлкнув по ней левой кнопкой мышки.",
            "Пользователь может узнать о всех доступных моделях на платформе, используя раздел \"Модели\" в меню \"Помощь\". Здесь он сможет найти информацию о более чем 250 моделях, включая их описание, параметры и примеры использования.",
            "В SMILE после выбора модели на рабочей поверхности отображаются следующие основные параметры: название модели, её тип, входные и выходные данные, а также список параметров, которые можно настроить.",
            "Важно добавить входные данные к модели, чтобы она могла работать.",
            "В платформе SMILE входные данные передаются модели через ориентированное ребро. Это ориентированное ребро позволяет передать набор признаков, который затем используется для формирования выхода модели.",
            "В параметрах столбцов для кодирования на платформе SMILE можно настроить такие параметры, как столбцы, которые нужно кодировать, тип кодирования, столбцы, которые нужно исключить из кодирования, столбцы, которые нужно преобразовать в категории, и столбцы, которые нужно преобразовать в числовые значения.",
            "Пользователь может найти более детальное описание и документацию по выбранной модели на платформе на странице модели."
        ]
    }
}
